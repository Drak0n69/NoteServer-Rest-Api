org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 20:48:03.877 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 20:48:04.213 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 7696 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 20:48:04.213 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 20:48:04.213 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 20:48:05.432 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.466 seconds (JVM running for 3.01)
com.zaxxer.hikari.HikariDataSource 2021.05.03 20:48:05.463 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 20:48:05.666 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 20:48:05.682 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@480ad82c, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4d18b73a]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 20:48:05.963 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:48:05, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 20:48:06.010 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 20:48:06.057 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 20:48:06.057 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 20:48:06.057 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=31, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:48:05, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 20:48:06.057 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 20:48:06.057 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 31(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 20:48:06.057 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 20:48:06.057 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 31(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:48:06.072 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=30, name='books', creator=User{id=31, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:48:05, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=31, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:48:05, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T20:48:06, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 31(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 30(Long), body(String), 31(Long), 2021-05-03T20:48:06(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:48:06.072 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 48
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 31(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 48(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:48:06.072 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 48
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 31(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 48(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:48:06.072 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 48
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 31(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:48:06.072 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:48:06.088 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:48:06.088 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 48(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:48:06.088 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 20:48:06.088 DEBUG [main] n.d.d.i.AccountDaoImpl: Select user by id = 31
notesServer.database.mappers.AccountMapper.getUserById 2021.05.03 20:48:06.088 DEBUG [main] n.d.m.A.getUserById: ==>  Preparing: SELECT * FROM user WHERE id = ? 
notesServer.database.mappers.AccountMapper.getUserById 2021.05.03 20:48:06.088 DEBUG [main] n.d.m.A.getUserById: ==> Parameters: 31(Long)
notesServer.database.mappers.AccountMapper.getUserById 2021.05.03 20:48:06.150 DEBUG [main] n.d.m.A.getUserById: <==      Total: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 20:48:06.353 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT avg(rating) FROM noteRating WHERE noteId = (SELECT id FROM note WHERE authorId = ?) 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 20:48:06.353 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 31(Long)
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 20:48:06.353 DEBUG [main] n.d.m.A.getUserRating: <==      Total: 1
org.springframework.test.context.transaction.TransactionContext 2021.05.03 20:48:10.307 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@480ad82c, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 20:48:10.321 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 20:48:10.328 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 20:50:24.307 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 20:50:24.338 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 20:50:24.385 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 20:50:24.401 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 20:50:24.401 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 20:50:24.401 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 20:50:24.401 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 20:50:24.401 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 20:50:24.448 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 20:50:24.541 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 20:50:24.541 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 20:50:24.541 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 20:50:24.541 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 20:50:24.557 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 20:50:24.573 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 20:50:24.713 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 20:50:25.019 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 14776 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 20:50:25.019 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 20:50:25.019 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 20:50:26.207 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.496 seconds (JVM running for 2.941)
com.zaxxer.hikari.HikariDataSource 2021.05.03 20:50:26.238 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 20:50:26.441 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 20:50:26.457 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@67064bdc, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4a7fd0c9]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 20:50:26.769 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:50:26, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 20:50:26.816 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 20:50:26.863 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 20:50:26.863 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 20:50:26.863 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=32, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:50:26, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 20:50:26.863 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 20:50:26.863 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 32(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 32(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:50:26.879 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=31, name='books', creator=User{id=32, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:50:26, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=32, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:50:26, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T20:50:26, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 32(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 31(Long), body(String), 32(Long), 2021-05-03T20:50:26(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:50:26.879 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 49
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 32(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 49(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:50:26.879 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 49
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 32(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:26.879 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 49(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:26.894 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:50:26.894 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 49
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:26.894 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:26.894 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 32(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:26.894 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:26.894 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:26.894 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 49(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:26.894 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 20:50:26.894 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT avg(rating) FROM noteRating WHERE noteId = (SELECT id FROM note WHERE authorId = ?) 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 20:50:26.894 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 32(Long)
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 20:50:26.910 DEBUG [main] n.d.m.A.getUserRating: <==      Total: 1
org.springframework.test.context.transaction.TransactionContext 2021.05.03 20:50:36.973 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@67064bdc, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 20:50:36.993 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 20:50:36.998 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 20:50:45.671 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 20:50:45.687 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 20:50:45.734 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 20:50:45.749 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 20:50:45.749 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 20:50:45.749 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 20:50:45.749 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 20:50:45.749 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 20:50:45.812 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 20:50:45.890 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 20:50:45.890 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 20:50:45.890 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 20:50:45.890 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 20:50:45.921 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 20:50:45.921 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 20:50:46.046 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 20:50:46.343 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 6376 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 20:50:46.343 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 20:50:46.343 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 20:50:47.493 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.437 seconds (JVM running for 2.761)
com.zaxxer.hikari.HikariDataSource 2021.05.03 20:50:47.524 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 20:50:47.759 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 20:50:47.759 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@5793b87, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@12704e15]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 20:50:48.040 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:50:48, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 20:50:48.087 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 20:50:48.102 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 20:50:48.118 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 20:50:48.118 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=33, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:50:48, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 20:50:48.118 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 20:50:48.118 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 33(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 20:50:48.118 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 20:50:48.118 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 20:50:48.118 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 33(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 20:50:48.118 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:50:48.118 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=32, name='books', creator=User{id=33, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:50:48, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=33, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:50:48, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T20:50:48, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.118 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.118 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 33(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.118 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 20:50:48.118 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 32(Long), body(String), 33(Long), 2021-05-03T20:50:48(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:50:48.134 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 50
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 33(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 50(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:50:48.134 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 50
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 33(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 50(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:50:48.134 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 50
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 33(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 50(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:50:48.134 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=32, name='books', creator=User{id=33, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:50:48, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=33, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:50:48, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T20:50:48, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 33(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 32(Long), body2(String), 33(Long), 2021-05-03T20:50:48(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:50:48.134 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 51
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 33(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:48.134 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:48.149 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 51(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:48.149 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:50:48.149 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 51
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.149 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.149 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 33(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.149 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:48.149 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:48.149 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 51(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:48.149 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:50:48.149 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 51
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.149 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.149 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 33(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:50:48.149 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:48.149 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:48.149 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 51(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:50:48.149 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 20:50:48.149 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT avg(rating) FROM noteRating WHERE noteId = (SELECT id FROM note WHERE authorId = ?) 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 20:50:48.149 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 33(Long)
org.springframework.test.context.transaction.TransactionContext 2021.05.03 20:50:48.227 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@5793b87, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 20:50:48.259 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 20:50:48.274 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 20:53:18.982 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 20:53:18.982 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 20:53:19.029 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 20:53:19.045 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 20:53:19.045 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 20:53:19.045 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 20:53:19.045 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 20:53:19.045 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 20:53:19.107 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 20:53:19.170 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 20:53:19.170 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 20:53:19.185 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 20:53:19.185 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 20:53:19.201 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 20:53:19.201 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 20:53:19.342 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 20:53:19.608 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 3540 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 20:53:19.608 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 20:53:19.608 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 20:53:20.778 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.444 seconds (JVM running for 2.902)
com.zaxxer.hikari.HikariDataSource 2021.05.03 20:53:20.824 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 20:53:21.059 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 20:53:21.059 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@7601bc96, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@48a0c8aa]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 20:53:21.356 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:53:21, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 20:53:21.403 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 20:53:21.434 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 20:53:21.434 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 20:53:21.434 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=34, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:53:21, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 20:53:21.434 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 20:53:21.434 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 34(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 20:53:21.434 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 20:53:21.434 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 34(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:53:21.449 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=33, name='books', creator=User{id=34, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:53:21, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=34, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:53:21, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T20:53:21, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 34(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 33(Long), body(String), 34(Long), 2021-05-03T20:53:21(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:53:21.449 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 52
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 34(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 52(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:53:21.449 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 52
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 34(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 52(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:53:21.449 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 52
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 34(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 52(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:53:21.449 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:53:21.465 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=33, name='books', creator=User{id=34, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:53:21, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=34, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T20:53:21, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T20:53:21, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 34(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 33(Long), body2(String), 34(Long), 2021-05-03T20:53:21(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:53:21.465 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 53
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 34(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 53(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:53:21.465 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 53
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 34(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 53(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 20:53:21.465 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 53
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 34(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 53(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 20:53:21.465 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT avg(SELECT avg(rating) FROM noteRating WHERE noteId = (SELECT id FROM note WHERE authorId = ?))) 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 20:53:21.481 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 34(Long)
org.springframework.test.context.transaction.TransactionContext 2021.05.03 20:53:21.559 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@7601bc96, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 20:53:21.574 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 20:53:21.590 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 21:00:27.797 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:00:27.797 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:00:27.843 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:00:27.859 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:00:27.859 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:00:27.859 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:00:27.859 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 21:00:27.859 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 21:00:27.922 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 21:00:28.000 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 21:00:28.000 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:00:28.000 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:00:28.000 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:00:28.015 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 21:00:28.031 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 21:00:28.156 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 21:00:28.437 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 4176 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 21:00:28.437 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 21:00:28.437 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 21:00:29.585 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.412 seconds (JVM running for 2.923)
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:00:29.617 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:00:29.835 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:00:29.835 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@77865933, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@480ad82c]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 21:00:30.117 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:00:30, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:00:30.148 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:00:30.195 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:00:30.195 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 21:00:30.195 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=35, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:00:30, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:00:30.195 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:00:30.195 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 35(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:00:30.195 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:00:30.195 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:00:30.195 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 35(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:00:30.195 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:00:30.210 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=34, name='books', creator=User{id=35, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:00:30, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=35, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:00:30, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:00:30, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 35(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 34(Long), body(String), 35(Long), 2021-05-03T21:00:30(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:00:30.210 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 54
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 35(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 54(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:00:30.210 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 54
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 35(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 54(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:00:30.210 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 54
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 35(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 54(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:00:30.210 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:00:30.226 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT note.rating FROM note WHERE authorId = ? 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:00:30.226 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 35(Long)
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:00:30.304 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@77865933, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:00:30.320 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:00:30.320 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 21:01:16.011 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:01:16.043 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:01:16.074 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:01:16.105 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:01:16.105 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:01:16.105 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:01:16.105 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 21:01:16.105 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 21:01:16.168 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 21:01:16.261 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 21:01:16.261 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:01:16.261 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:01:16.261 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:01:16.293 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 21:01:16.293 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 21:01:16.465 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 21:01:16.756 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 2652 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 21:01:16.756 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 21:01:16.756 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 21:01:17.963 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.497 seconds (JVM running for 3.26)
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:01:17.994 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:01:18.197 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:01:18.197 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@4993febc, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7601bc96]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 21:01:18.479 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:01:18, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:01:18.525 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:01:18.557 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:01:18.557 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 21:01:18.572 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=36, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:01:18, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:01:18.572 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:01:18.572 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 36(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:01:18.572 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:01:18.572 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:01:18.572 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 36(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:01:18.572 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:01:18.572 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=35, name='books', creator=User{id=36, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:01:18, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=36, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:01:18, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:01:18, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:01:18.572 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:01:18.572 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 36(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:01:18.572 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:01:18.572 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:01:18.572 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 35(Long), body(String), 36(Long), 2021-05-03T21:01:18(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:01:18.572 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:01:18.588 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 55
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 36(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 55(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:01:18.588 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 55
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 36(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 55(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:01:18.588 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 55
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 36(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 55(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(note.rating) FROM note WHERE authorId = ? 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:01:18.588 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 36(Long)
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:01:18.666 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@4993febc, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:01:18.697 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:01:18.697 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 21:03:38.415 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:03:38.434 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:03:38.490 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:03:38.519 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:03:38.525 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:03:38.526 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:03:38.526 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 21:03:38.527 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 21:03:38.598 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 21:03:38.702 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 21:03:38.702 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:03:38.702 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:03:38.702 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:03:38.745 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 21:03:38.752 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 21:03:38.917 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 21:03:39.233 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 9652 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 21:03:39.233 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 21:03:39.233 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 21:03:40.656 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.746 seconds (JVM running for 3.231)
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:03:40.703 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:03:40.921 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:03:40.937 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@424de326, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4bc33720]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 21:03:41.218 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:03:41, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:03:41.250 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:03:41.281 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:03:41.281 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 21:03:41.296 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=37, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:03:41, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:03:41.296 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:03:41.296 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 37(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:03:41.296 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:03:41.296 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:03:41.296 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 37(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:03:41.296 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:03:41.296 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=36, name='books', creator=User{id=37, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:03:41, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=37, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:03:41, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:03:41, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:03:41.296 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:03:41.296 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 37(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:03:41.296 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:03:41.296 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:03:41.296 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 36(Long), body(String), 37(Long), 2021-05-03T21:03:41(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:03:41.312 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 56
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 37(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 56(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:03:41.312 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 56
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 37(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 56(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:03:41.312 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 56
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 37(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 56(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT avg(rating) FROM noteRating WHERE noteId = (SELECT id FROM note WHERE authorId = ?) 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:03:41.312 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 37(Long)
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:03:41.328 DEBUG [main] n.d.m.A.getUserRating: <==      Total: 1
com.zaxxer.hikari.pool.HikariPool 2021.05.03 21:04:43.326 WARN  [HikariPool-1 housekeeper] c.z.h.p.HikariPool: HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m2s293ms413µs600ns).
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:04:43.341 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@424de326, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:04:43.366 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:04:43.372 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 21:04:48.841 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:04:48.857 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:04:48.888 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:04:48.904 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:04:48.919 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:04:48.919 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:04:48.919 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 21:04:48.919 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 21:04:48.966 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 21:04:49.044 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 21:04:49.044 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:04:49.044 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:04:49.044 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:04:49.060 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 21:04:49.076 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 21:04:49.185 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 21:04:49.467 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 6064 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 21:04:49.467 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 21:04:49.467 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 21:04:50.572 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.381 seconds (JVM running for 2.706)
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:04:50.604 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:04:50.807 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:04:50.807 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@4993febc, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7601bc96]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 21:04:51.088 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:04:51, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:04:51.119 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:04:51.166 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:04:51.166 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 21:04:51.166 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=38, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:04:51, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:04:51.166 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:04:51.166 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 38(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:04:51.166 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:04:51.166 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:04:51.166 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 38(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:04:51.166 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:04:51.166 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=37, name='books', creator=User{id=38, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:04:51, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=38, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:04:51, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:04:51, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.166 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.166 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 38(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 37(Long), body(String), 38(Long), 2021-05-03T21:04:51(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:04:51.182 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 57
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 38(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 57(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:04:51.182 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 57
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 38(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 57(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:04:51.182 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 57
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 38(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 57(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:04:51.182 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=37, name='books', creator=User{id=38, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:04:51, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=38, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:04:51, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:04:51, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 38(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:04:51.182 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 37(Long), body2(String), 38(Long), 2021-05-03T21:04:51(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:04:51.197 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 58
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 38(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 58(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:04:51.197 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 58
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 38(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 58(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:04:51.197 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 58
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 38(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 58(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT avg(rating) FROM noteRating WHERE noteId = (SELECT id FROM note WHERE authorId = ?) 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:04:51.197 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 38(Long)
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:04:51.276 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@4993febc, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:04:51.307 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:04:51.307 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 21:05:50.651 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:05:50.666 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:05:50.690 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:05:50.721 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:05:50.721 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:05:50.721 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:05:50.721 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 21:05:50.721 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 21:05:50.783 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 21:05:50.870 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 21:05:50.872 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:05:50.875 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:05:50.876 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:05:50.906 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 21:05:50.913 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 21:05:51.074 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 21:05:51.415 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 14020 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 21:05:51.415 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 21:05:51.415 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 21:05:52.685 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.62 seconds (JVM running for 3.035)
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:05:52.732 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:05:52.936 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:05:52.936 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@424de326, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4bc33720]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 21:05:53.217 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:05:53, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:05:53.264 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:05:53.295 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:05:53.295 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 21:05:53.310 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=39, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:05:53, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:05:53.310 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:05:53.310 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 39(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:05:53.310 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:05:53.310 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:05:53.310 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 39(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:05:53.310 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:05:53.310 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=38, name='books', creator=User{id=39, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:05:53, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=39, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:05:53, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:05:53, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.310 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.310 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 39(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.310 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:05:53.310 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:05:53.310 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 38(Long), body(String), 39(Long), 2021-05-03T21:05:53(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:05:53.310 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:05:53.310 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 59
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.310 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.310 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 39(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.310 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:05:53.310 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:05:53.310 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 59(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:05:53.326 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 59
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 39(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 59(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:05:53.326 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 59
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 39(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 59(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:05:53.326 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=38, name='books', creator=User{id=39, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:05:53, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=39, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:05:53, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:05:53, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 39(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 38(Long), body2(String), 39(Long), 2021-05-03T21:05:53(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:05:53.326 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 60
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 39(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 60(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:05:53.326 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 60
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.326 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 39(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.342 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:05:53.342 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:05:53.342 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 60(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:05:53.342 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:05:53.342 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 60
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.342 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.342 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 39(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:05:53.342 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:05:53.342 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:05:53.342 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 60(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:05:53.342 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:05:53.342 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT SUM(rating) FROM noteRating WHERE noteId = (SELECT id FROM note WHERE authorId = ?) 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:05:53.342 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 39(Long)
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:05:53.435 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@424de326, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:05:53.467 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:05:53.467 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 21:10:36.302 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:10:36.317 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:10:36.364 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:10:36.380 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:10:36.380 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:10:36.380 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:10:36.380 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 21:10:36.380 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 21:10:36.442 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 21:10:36.505 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 21:10:36.505 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:10:36.505 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:10:36.505 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:10:36.536 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 21:10:36.536 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 21:10:36.661 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 21:10:36.933 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 9444 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 21:10:36.933 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 21:10:36.933 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 21:10:38.087 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.415 seconds (JVM running for 2.811)
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:10:38.118 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:10:38.353 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:10:38.353 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@7a360554, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@424de326]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 21:10:38.665 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:10:38, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:10:38.696 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:10:38.743 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:10:38.743 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 21:10:38.743 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=40, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:10:38, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:10:38.743 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:10:38.743 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 40(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:10:38.743 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 40(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:10:38.759 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=39, name='books', creator=User{id=40, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:10:38, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=40, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:10:38, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:10:38, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 40(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 39(Long), body(String), 40(Long), 2021-05-03T21:10:38(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:10:38.759 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 61
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 40(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 61(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:10:38.759 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 61
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 40(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 61(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:10:38.759 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 61
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 40(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:10:38.759 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 61(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:10:38.774 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=39, name='books', creator=User{id=40, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:10:38, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=40, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:10:38, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:10:38, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 40(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 39(Long), body2(String), 40(Long), 2021-05-03T21:10:38(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:10:38.774 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 62
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 40(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 62(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:10:38.774 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 62
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 40(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 62(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:10:38.774 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 62
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 40(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 62(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:10:38.774 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:10:38.790 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT avg(rating) AS userRating FROM (SELECT avg(rating) AS userRating FROM noteRating WHERE noteId = (SELECT id FROM note WHERE authorId = ?) AS ratings 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:10:38.790 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 40(Long)
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:10:38.868 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@7a360554, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:10:38.899 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:10:38.899 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 21:11:20.336 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:11:20.352 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:11:20.399 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:11:20.415 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:11:20.415 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:11:20.415 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:11:20.415 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 21:11:20.415 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 21:11:20.477 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 21:11:20.555 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 21:11:20.555 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:11:20.571 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:11:20.571 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:11:20.586 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 21:11:20.586 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 21:11:20.711 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 21:11:20.989 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 11828 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 21:11:20.989 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 21:11:20.989 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 21:11:22.187 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.471 seconds (JVM running for 2.808)
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:11:22.218 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:11:22.437 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:11:22.437 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@424de326, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4bc33720]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 21:11:22.718 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:11:22, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:11:22.765 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:11:22.796 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:11:22.796 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 21:11:22.796 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=41, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:11:22, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 41(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 41(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:11:22.812 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=40, name='books', creator=User{id=41, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:11:22, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=41, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:11:22, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:11:22, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 41(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 40(Long), body(String), 41(Long), 2021-05-03T21:11:22(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:11:22.812 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 63
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 41(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 63(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:11:22.812 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 63
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 41(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:11:22.812 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 63(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:11:22.827 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 63
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 41(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 63(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:11:22.827 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=40, name='books', creator=User{id=41, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:11:22, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=41, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:11:22, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:11:22, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 41(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 40(Long), body2(String), 41(Long), 2021-05-03T21:11:22(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:11:22.827 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 64
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 41(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 64(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:11:22.827 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 64
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 41(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 64(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:11:22.827 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 64
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.827 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 41(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:11:22.843 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:11:22.843 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:11:22.843 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 64(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:11:22.843 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:11:22.843 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT avg(rating) AS userRating FROM (SELECT avg(rating) AS userRating FROM noteRating WHERE noteId = (SELECT id FROM note WHERE authorId = ?) GROUP BY rating) AS ratings 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:11:22.843 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 41(Long)
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:11:22.937 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@424de326, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:11:22.952 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:11:22.968 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 21:23:14.704 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:23:14.736 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:23:14.783 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:23:14.798 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:23:14.814 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:23:14.814 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:23:14.814 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 21:23:14.814 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 21:23:14.876 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 21:23:14.986 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 21:23:14.986 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:23:14.986 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:23:14.986 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:23:15.017 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 21:23:15.033 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 21:23:15.204 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 21:23:15.561 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 7264 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 21:23:15.561 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 21:23:15.561 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 21:23:17.039 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.829 seconds (JVM running for 3.494)
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:23:17.070 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:23:17.383 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:23:17.383 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@7a360554, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@424de326]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 21:23:17.758 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:23:17, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:23:17.805 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:23:17.851 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:23:17.851 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 21:23:17.851 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=42, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:23:17, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:23:17.851 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:23:17.851 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 42(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:23:17.867 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:23:17.867 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:23:17.867 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 42(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:23:17.867 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:23:17.867 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=41, name='books', creator=User{id=42, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:23:17, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=42, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:23:17, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:23:17, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.867 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.867 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 42(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.867 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:23:17.867 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:23:17.867 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 41(Long), body(String), 42(Long), 2021-05-03T21:23:17(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:23:17.867 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:23:17.867 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 65
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.867 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.867 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 42(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.867 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:23:17.867 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:23:17.867 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 65(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:23:17.867 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:23:17.867 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 65
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.867 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.867 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 42(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.883 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:23:17.883 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:23:17.883 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 65(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:23:17.883 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:23:17.883 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 65
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.883 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.883 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 42(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.883 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:23:17.883 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:23:17.883 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 65(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:23:17.883 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:23:17.883 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=41, name='books', creator=User{id=42, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:23:17, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=42, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:23:17, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:23:17, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.883 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.883 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 42(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.883 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:23:17.883 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:23:17.883 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 41(Long), body2(String), 42(Long), 2021-05-03T21:23:17(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:23:17.883 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:23:17.898 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 66
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 42(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 66(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:23:17.898 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 66
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 42(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 66(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:23:17.898 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 66
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 42(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 66(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:23:17.898 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT avg(uRating) FROM (SELECT sum(rating) AS uRating FROM noteRating WHERE noteId = (SELECT id FROM note WHERE authorId = ?) GROUP BY rating)) 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:23:17.914 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 42(Long)
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:23:18.023 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@7a360554, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:23:18.039 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:23:18.055 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 21:25:01.547 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:25:01.563 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:25:01.609 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:25:01.625 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:25:01.641 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:25:01.641 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:25:01.641 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 21:25:01.641 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 21:25:01.703 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 21:25:01.781 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 21:25:01.781 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:25:01.781 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:25:01.781 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:25:01.813 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 21:25:01.813 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 21:25:01.969 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 21:25:02.287 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 11692 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 21:25:02.287 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 21:25:02.287 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 21:25:03.636 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.669 seconds (JVM running for 3.363)
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:25:03.683 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:25:03.933 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:25:03.949 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@6f1a16fe, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@2373ad99]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 21:25:04.339 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:25:04, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:25:04.386 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:25:04.433 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:25:04.433 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 21:25:04.449 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=43, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:25:04, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:25:04.449 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:25:04.449 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 43(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:25:04.449 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:25:04.449 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:25:04.449 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 43(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:25:04.464 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:25:04.464 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=42, name='books', creator=User{id=43, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:25:04, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=43, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:25:04, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:25:04, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.464 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.464 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 43(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.464 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:25:04.464 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:25:04.464 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 42(Long), body(String), 43(Long), 2021-05-03T21:25:04(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:25:04.464 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:25:04.464 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 67
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.464 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.464 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 43(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.464 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:04.464 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:04.464 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 67(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:04.464 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:25:04.464 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 67
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.464 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.464 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 43(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 67(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:25:04.480 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 67
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 43(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 67(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:25:04.480 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=42, name='books', creator=User{id=43, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:25:04, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=43, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:25:04, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:25:04, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 43(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 42(Long), body2(String), 43(Long), 2021-05-03T21:25:04(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:25:04.480 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 68
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 43(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:04.480 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:04.496 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 68(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:04.496 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:25:04.496 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 68
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.496 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.496 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 43(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.496 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:04.496 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:04.496 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 68(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:04.496 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:25:04.496 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 68
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.496 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.496 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 43(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:04.496 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:04.496 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:04.496 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 68(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:04.496 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:25:04.496 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: select avg(rating) from (SELECT id, sum(rating) FROM noteRating GROUP BY id) 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:25:04.511 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:25:04.636 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@6f1a16fe, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:25:04.667 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:25:04.667 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 21:25:54.037 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:25:54.061 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:25:54.116 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:25:54.137 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:25:54.144 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:25:54.145 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:25:54.146 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 21:25:54.148 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 21:25:54.220 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 21:25:54.330 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 21:25:54.330 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:25:54.330 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:25:54.330 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:25:54.361 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 21:25:54.382 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 21:25:54.613 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 21:25:54.991 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 9312 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 21:25:54.991 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 21:25:54.994 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 21:25:56.526 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.906 seconds (JVM running for 3.699)
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:25:56.568 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:25:56.940 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:25:56.947 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@4993febc, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7601bc96]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 21:25:57.605 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:25:57, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:25:57.655 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:25:57.734 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:25:57.736 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 21:25:57.747 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=44, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:25:57, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:25:57.749 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:25:57.750 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 44(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:25:57.752 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:25:57.752 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:25:57.753 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 44(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:25:57.754 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:25:57.755 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=43, name='books', creator=User{id=44, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:25:57, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=44, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:25:57, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:25:57, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.756 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.757 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 44(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.758 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:25:57.759 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:25:57.763 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 43(Long), body(String), 44(Long), 2021-05-03T21:25:57(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:25:57.766 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:25:57.767 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 69
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.768 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.769 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 44(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.770 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:57.771 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:57.772 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 69(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:57.773 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:25:57.774 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 69
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.774 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.775 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 44(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.776 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:57.777 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:57.777 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 69(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:57.779 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:25:57.779 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 69
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.780 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.780 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 44(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.781 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:57.782 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:57.783 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 69(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:57.784 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:25:57.784 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=43, name='books', creator=User{id=44, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:25:57, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=44, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:25:57, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:25:57, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.785 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.785 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 44(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.786 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:25:57.787 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:25:57.788 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 43(Long), body2(String), 44(Long), 2021-05-03T21:25:57(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:25:57.790 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:25:57.791 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 70
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.791 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.791 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 44(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.793 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:57.793 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:57.794 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 70(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:57.796 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:25:57.796 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 70
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.797 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.798 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 44(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.801 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:57.802 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:57.803 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 70(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:57.804 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:25:57.805 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 70
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.805 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.806 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 44(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:25:57.807 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:57.808 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:57.808 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 70(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:25:57.809 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:25:57.813 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: select avg(total) as rating from (SELECT id, sum(rating) as total FROM noteRating GROUP BY id) 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:25:57.814 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:25:57.961 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@4993febc, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:25:57.988 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:25:58.000 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 21:49:58.361 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:49:58.384 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:49:58.429 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:49:58.452 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:49:58.458 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:49:58.458 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:49:58.459 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 21:49:58.460 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 21:49:58.522 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 21:49:58.628 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 21:49:58.630 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:49:58.634 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:49:58.635 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:49:58.665 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 21:49:58.671 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 21:49:58.868 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 21:49:59.219 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 12296 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 21:49:59.219 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 21:49:59.221 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 21:50:00.740 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.867 seconds (JVM running for 4.782)
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:50:00.779 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:50:01.098 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:50:01.107 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@6f1a16fe, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@2373ad99]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 21:50:01.599 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:50:01, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:50:01.664 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:50:01.723 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:50:01.725 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 21:50:01.735 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=45, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:50:01, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:50:01.737 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:50:01.737 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 45(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:50:01.739 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:50:01.739 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:50:01.740 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 45(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:50:01.742 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:50:01.743 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=44, name='books', creator=User{id=45, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:50:01, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=45, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:50:01, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:50:01, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.743 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.744 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 45(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.745 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:50:01.746 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:50:01.750 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 44(Long), body(String), 45(Long), 2021-05-03T21:50:01(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:50:01.751 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:50:01.752 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 71
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.752 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.753 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 45(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.754 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:01.755 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:01.755 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 71(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:01.757 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:50:01.757 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 71
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.758 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.758 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 45(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.760 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:01.760 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:01.761 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 71(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:01.762 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:50:01.762 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 71
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.762 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.763 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 45(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.764 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:01.764 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:01.765 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 71(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:01.766 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:50:01.767 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=44, name='books', creator=User{id=45, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:50:01, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=45, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:50:01, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:50:01, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.767 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.767 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 45(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.768 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:50:01.769 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:50:01.770 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 44(Long), body2(String), 45(Long), 2021-05-03T21:50:01(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:50:01.772 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:50:01.772 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 72
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.773 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.773 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 45(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.774 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:01.775 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:01.776 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 72(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:01.778 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:50:01.778 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 72
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.779 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.780 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 45(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.782 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:01.784 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:01.784 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 72(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:01.786 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:50:01.786 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 72
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.786 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.787 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 45(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:01.788 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:01.788 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:01.789 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 72(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:01.790 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:50:01.794 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT user.id, AVG(rating) FROM user LEFT JOIN note ON (user.id = note.authorId) LEFT JOIN noteRating ON (note.id = noteRating.noteId)WHERE user.id = ? 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:50:01.795 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 45(Long)
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:50:01.937 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@6f1a16fe, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:50:01.971 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:50:01.987 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 21:50:55.742 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:50:55.760 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:50:55.805 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:50:55.827 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:50:55.834 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:50:55.835 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:50:55.835 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 21:50:55.837 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 21:50:55.917 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 21:50:56.028 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 21:50:56.030 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:50:56.034 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:50:56.035 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:50:56.066 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 21:50:56.072 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 21:50:56.234 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 21:50:56.609 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 9036 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 21:50:56.610 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 21:50:56.613 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 21:50:58.030 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.791 seconds (JVM running for 3.647)
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:50:58.075 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:50:58.376 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:50:58.382 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@424de326, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4bc33720]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 21:50:58.764 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:50:58, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:50:58.801 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:50:58.843 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:50:58.845 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 21:50:58.854 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=46, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:50:58, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:50:58.856 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:50:58.857 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 46(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:50:58.858 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:50:58.859 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:50:58.860 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 46(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:50:58.861 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:50:58.861 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=45, name='books', creator=User{id=46, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:50:58, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=46, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:50:58, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:50:58, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.862 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.862 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 46(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.863 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:50:58.864 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:50:58.866 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 45(Long), body(String), 46(Long), 2021-05-03T21:50:58(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:50:58.867 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:50:58.868 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 73
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.868 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.869 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 46(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.870 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:58.870 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:58.871 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 73(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:58.872 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:50:58.872 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 73
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.873 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.873 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 46(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.874 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:58.875 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:58.875 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 73(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:58.876 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:50:58.876 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 73
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.877 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.877 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 46(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.878 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:58.878 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:58.879 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 73(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:58.880 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:50:58.880 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=45, name='books', creator=User{id=46, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:50:58, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=46, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:50:58, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:50:58, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.880 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.881 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 46(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.882 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:50:58.882 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:50:58.883 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 45(Long), body2(String), 46(Long), 2021-05-03T21:50:58(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:50:58.884 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:50:58.885 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 74
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.885 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.886 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 46(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.887 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:58.887 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:58.888 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 74(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:58.889 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:50:58.890 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 74
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.891 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.892 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 46(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.894 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:58.895 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:58.895 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 74(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:58.896 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:50:58.896 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 74
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.897 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.897 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 46(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:50:58.898 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:58.898 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:58.899 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 74(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:50:58.900 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:50:58.903 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(rating) FROM user LEFT JOIN note ON (user.id = note.authorId) LEFT JOIN noteRating ON (note.id = noteRating.noteId)WHERE user.id = ? 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:50:58.903 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 46(Long)
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:50:59.020 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@424de326, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:50:59.044 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:50:59.055 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 21:53:23.352 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:53:23.382 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:53:23.438 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:53:23.467 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:53:23.474 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:53:23.476 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:53:23.476 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 21:53:23.481 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 21:53:23.563 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 21:53:23.668 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 21:53:23.671 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:53:23.674 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:53:23.675 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:53:23.702 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@302f7971, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@332729ad, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@75d2da2d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4278284b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@9573584, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3370f42, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6057aebb, org.springframework.test.context.event.EventPublishingTestExecutionListener@63eef88a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@53251a66, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6853425f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@352c1b98, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@21129f1f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5a9f4771]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 21:53:23.709 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 21:53:23.882 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 21:53:24.210 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 10096 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 21:53:24.211 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 21:53:24.212 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 21:53:25.477 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.59 seconds (JVM running for 3.208)
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:53:25.507 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:53:25.759 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:53:25.765 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@6e4c0d8c, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@3e3315d9]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 21:53:26.078 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:53:26, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:53:26.101 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:53:26.147 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:53:26.149 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 21:53:26.155 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=47, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:53:26, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:53:26.157 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:53:26.157 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 47(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:53:26.158 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:53:26.159 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:53:26.159 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 47(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:53:26.160 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:53:26.161 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=46, name='books', creator=User{id=47, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:53:26, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=47, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:53:26, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:53:26, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.162 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.162 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 47(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.163 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:53:26.164 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:53:26.166 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 46(Long), body(String), 47(Long), 2021-05-03T21:53:26(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:53:26.167 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:53:26.168 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 75
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.168 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.169 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 47(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.170 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:53:26.171 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:53:26.171 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 75(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:53:26.172 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:53:26.173 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 75
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.173 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.173 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 47(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.174 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:53:26.174 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:53:26.175 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 75(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:53:26.176 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:53:26.176 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 75
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.176 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.177 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 47(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.178 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:53:26.178 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:53:26.179 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 75(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:53:26.180 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:53:26.180 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=46, name='books', creator=User{id=47, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:53:26, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=47, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:53:26, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:53:26, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.180 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.181 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 47(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.182 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:53:26.182 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:53:26.183 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 46(Long), body2(String), 47(Long), 2021-05-03T21:53:26(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:53:26.185 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:53:26.185 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 76
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.186 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.186 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 47(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.187 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:53:26.188 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:53:26.188 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 76(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:53:26.190 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:53:26.190 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 76
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.191 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.192 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 47(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.194 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:53:26.195 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:53:26.196 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 76(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:53:26.197 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:53:26.198 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 76
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.198 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.198 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 47(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:53:26.199 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:53:26.200 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:53:26.200 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 76(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:53:26.201 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:53:26.204 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(rating) FROM user LEFT JOIN note ON (user.id = note.authorId) LEFT JOIN noteRating ON (note.id = noteRating.noteId)WHERE user.id = ? GROUP BY user.id 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:53:26.205 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 47(Long)
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:53:26.317 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@6e4c0d8c, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:53:26.333 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:53:26.341 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 21:55:15.419 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:55:15.440 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:55:15.493 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:55:15.521 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:55:15.526 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:55:15.527 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:55:15.527 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 21:55:15.528 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 21:55:15.595 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 21:55:15.699 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 21:55:15.701 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:55:15.704 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:55:15.705 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:55:15.738 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@13d4992d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@302f7971, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@332729ad, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@75d2da2d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4278284b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@9573584, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3370f42, org.springframework.test.context.event.EventPublishingTestExecutionListener@6057aebb, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@63eef88a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@53251a66, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6853425f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@352c1b98, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@21129f1f]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 21:55:15.745 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@2141a12 testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4196c360 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@41294f8 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7dfd3c81, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6933b6c6, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1e4f4a5c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@503f91c3], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 21:55:15.937 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 21:55:16.246 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 14272 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 21:55:16.247 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 21:55:16.249 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 21:55:17.537 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.595 seconds (JVM running for 3.256)
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:55:17.563 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:55:17.799 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:55:17.805 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@2141a12 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@3240b2a4, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4196c360 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@41294f8 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7dfd3c81, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6933b6c6, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1e4f4a5c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@503f91c3], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@58434b19]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 21:55:18.124 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:55:18, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:55:18.150 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:55:18.196 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:55:18.198 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 21:55:18.212 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=48, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:55:18, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:55:18.215 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:55:18.216 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 48(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:55:18.217 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:55:18.217 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:55:18.218 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 48(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:55:18.219 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:55:18.220 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=47, name='books', creator=User{id=48, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:55:18, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=48, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:55:18, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:55:18, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.221 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.221 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 48(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.222 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:55:18.222 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:55:18.225 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 47(Long), body(String), 48(Long), 2021-05-03T21:55:18(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:55:18.226 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:55:18.227 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 77
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.228 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.229 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 48(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.230 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:55:18.230 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:55:18.231 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 77(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:55:18.232 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:55:18.233 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 77
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.233 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.234 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 48(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.235 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:55:18.235 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:55:18.236 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 77(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:55:18.237 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:55:18.237 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 77
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.238 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.238 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 48(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.239 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:55:18.239 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:55:18.240 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 77(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:55:18.241 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:55:18.241 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=47, name='books', creator=User{id=48, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:55:18, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=48, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:55:18, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:55:18, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.242 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.242 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 48(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.243 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:55:18.243 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:55:18.244 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 47(Long), body2(String), 48(Long), 2021-05-03T21:55:18(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:55:18.245 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:55:18.246 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 78
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.246 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.247 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 48(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.248 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:55:18.248 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:55:18.250 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 78(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:55:18.251 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:55:18.252 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 78
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.252 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.253 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 48(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.254 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:55:18.255 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:55:18.256 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 78(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:55:18.257 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:55:18.257 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 78
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.258 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.258 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 48(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:55:18.259 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:55:18.259 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:55:18.260 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 78(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:55:18.261 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:55:18.263 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(rating) FROM note LEFT JOIN noteRating ON (note.id = noteRating.noteId)WHERE note.id = (SELECT id FROM note WHERE authorId = ?) GROUP BY user.id 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:55:18.264 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 48(Long)
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:55:18.369 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@2141a12 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@3240b2a4, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@4196c360 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@41294f8 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7dfd3c81, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6933b6c6, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@1e4f4a5c, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@503f91c3], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:55:18.387 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:55:18.399 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 21:56:58.056 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:56:58.072 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:56:58.123 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:56:58.148 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:56:58.153 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:56:58.154 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:56:58.154 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 21:56:58.155 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 21:56:58.213 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 21:56:58.307 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 21:56:58.309 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:56:58.311 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:56:58.312 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:56:58.335 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@302f7971, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@332729ad, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@75d2da2d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4278284b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@9573584, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3370f42, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6057aebb, org.springframework.test.context.event.EventPublishingTestExecutionListener@63eef88a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@53251a66, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6853425f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@352c1b98, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@21129f1f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5a9f4771]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 21:56:58.340 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 21:56:58.492 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 21:56:58.806 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 2640 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 21:56:58.807 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 21:56:58.809 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 21:56:59.992 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.495 seconds (JVM running for 2.948)
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:57:00.021 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:57:00.249 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:57:00.255 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@623ebac7, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c8c70d6]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 21:57:00.582 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:57, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:57:00.605 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:57:00.662 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:57:00.664 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 21:57:00.670 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=49, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:57, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:57:00.672 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:57:00.672 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 49(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:57:00.673 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:57:00.674 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:57:00.674 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 49(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:57:00.675 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:57:00.676 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=48, name='books', creator=User{id=49, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:57, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=49, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:57, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:57, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.677 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.677 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 49(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.678 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:57:00.678 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:57:00.680 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 48(Long), body(String), 49(Long), 2021-05-03T21:57(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:57:00.681 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:57:00.682 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 79
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.682 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.683 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 49(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.684 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:00.684 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:00.685 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 79(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:00.686 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:57:00.686 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 79
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.686 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.687 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 49(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.688 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:00.688 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:00.688 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 79(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:00.689 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:57:00.689 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 79
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.690 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.690 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 49(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.691 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:00.691 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:00.692 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 79(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:00.692 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:57:00.693 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=48, name='books', creator=User{id=49, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:57, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=49, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:57, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:57, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.693 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.693 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 49(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.694 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:57:00.694 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:57:00.695 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 48(Long), body2(String), 49(Long), 2021-05-03T21:57(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:57:00.696 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:57:00.697 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 80
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.697 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.697 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 49(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.698 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:00.698 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:00.699 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 80(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:00.701 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:57:00.701 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 80
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.701 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.702 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 49(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.703 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:00.704 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:00.705 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 80(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:00.706 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:57:00.706 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 80
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.706 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.706 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 49(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:00.707 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:00.707 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:00.708 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 80(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:00.709 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:57:00.711 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(rating) FROM noteRating LEFT JOIN note ON (noteRating.noteId = note.id) WHERE note.id = (SELECT id FROM note WHERE authorId = ?) 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:57:00.712 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 49(Long)
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:57:00.794 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@623ebac7, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:57:00.809 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:57:00.816 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.03 21:57:12.653 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:57:12.671 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.03 21:57:12.725 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:57:12.755 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:57:12.763 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:57:12.765 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.03 21:57:12.765 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.03 21:57:12.767 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.03 21:57:12.844 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.03 21:57:12.945 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.03 21:57:12.947 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:57:12.950 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:57:12.951 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.03 21:57:12.983 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@302f7971, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@332729ad, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@75d2da2d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4278284b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@9573584, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3370f42, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6057aebb, org.springframework.test.context.event.EventPublishingTestExecutionListener@63eef88a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@53251a66, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6853425f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@352c1b98, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@21129f1f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5a9f4771]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.03 21:57:12.989 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.03 21:57:13.166 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.03 21:57:13.478 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 7912 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.03 21:57:13.478 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.03 21:57:13.480 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.03 21:57:15.355 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 2.177 seconds (JVM running for 3.673)
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:57:15.392 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:57:15.717 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:57:15.723 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@58434b19, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7d3fb0ef]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.03 21:57:16.167 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:57:16, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:57:16.211 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:57:16.285 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.03 21:57:16.286 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.03 21:57:16.297 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=50, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:57:16, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:57:16.299 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:57:16.300 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 50(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.03 21:57:16.301 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:57:16.302 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:57:16.303 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 50(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.03 21:57:16.304 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:57:16.305 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=49, name='books', creator=User{id=50, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:57:16, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=50, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:57:16, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:57:16, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.305 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.306 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 50(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.307 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:57:16.308 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:57:16.311 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 49(Long), body(String), 50(Long), 2021-05-03T21:57:16(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:57:16.312 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:57:16.313 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 81
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.313 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.314 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 50(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.316 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:16.316 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:16.317 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 81(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:16.318 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:57:16.318 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 81
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.319 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.319 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 50(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.320 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:16.321 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:16.321 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 81(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:16.322 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:57:16.322 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 81
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.323 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.323 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 50(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.324 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:16.324 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:16.325 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 81(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:16.326 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:57:16.327 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=49, name='books', creator=User{id=50, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:57:16, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=50, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-03T21:57:16, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-03T21:57:16, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.327 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.328 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 50(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.329 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:57:16.330 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:57:16.332 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 49(Long), body2(String), 50(Long), 2021-05-03T21:57:16(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.03 21:57:16.333 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:57:16.334 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 82
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.334 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.335 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 50(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.336 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:16.337 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:16.338 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 82(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:16.339 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:57:16.340 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 82
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.341 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.342 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 50(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.343 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:16.344 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:16.345 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 82(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:16.347 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.03 21:57:16.347 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 82
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.348 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.348 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 50(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.03 21:57:16.350 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:16.350 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:16.351 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 82(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.03 21:57:16.353 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:57:16.356 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(rating) FROM noteRating JOIN note ON (noteRating.noteId = note.id) WHERE note.id = (SELECT id FROM note WHERE authorId = ?) 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.03 21:57:16.357 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 50(Long)
org.springframework.test.context.transaction.TransactionContext 2021.05.03 21:57:16.459 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@58434b19, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:57:16.481 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.03 21:57:16.490 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.04 20:01:12.534 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:01:12.556 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:01:12.598 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:01:12.621 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:01:12.626 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:01:12.627 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:01:12.627 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.04 20:01:12.628 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.04 20:01:12.687 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.04 20:01:12.789 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.04 20:01:12.791 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:01:12.794 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:01:12.795 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:01:12.822 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.04 20:01:12.828 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.04 20:01:13.040 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.04 20:01:13.398 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 12912 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.04 20:01:13.399 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.04 20:01:13.402 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.04 20:01:15.038 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.992 seconds (JVM running for 4.859)
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:01:15.077 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:01:15.381 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:01:15.389 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@67064bdc, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4a7fd0c9]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:01:15.899 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:01:15, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:01:15.937 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:01:15.982 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:01:15.983 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.04 20:01:15.992 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=51, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:01:15, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:01:15.995 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:01:15.995 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 51(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:01:15.997 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:01:15.997 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:01:15.998 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 51(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:01:16.000 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:01:16.000 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=50, name='books', creator=User{id=51, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:01:15, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=51, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:01:15, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:01:16, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.001 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.001 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 51(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.002 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:01:16.003 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:01:16.005 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 50(Long), body(String), 51(Long), 2021-05-04T20:01:16(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:01:16.007 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:01:16.007 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 83
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.007 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.008 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 51(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.009 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:01:16.009 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:01:16.010 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 83(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:01:16.011 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:01:16.012 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 83
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.012 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.012 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 51(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.013 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:01:16.014 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:01:16.014 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 83(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:01:16.015 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:01:16.015 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 83
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.016 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.016 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 51(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.017 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:01:16.018 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:01:16.018 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 83(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:01:16.019 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:01:16.019 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=50, name='books', creator=User{id=51, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:01:15, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=51, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:01:15, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:01:16, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.019 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.020 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 51(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.021 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:01:16.021 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:01:16.022 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 50(Long), body2(String), 51(Long), 2021-05-04T20:01:16(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:01:16.023 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:01:16.024 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 84
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.024 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.025 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 51(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.026 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:01:16.026 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:01:16.027 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 84(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:01:16.028 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:01:16.029 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 84
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.029 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.030 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 51(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.032 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:01:16.033 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:01:16.034 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 84(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:01:16.035 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:01:16.035 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 84
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.035 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.036 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 51(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:01:16.037 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:01:16.037 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:01:16.037 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 84(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:01:16.038 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:01:16.041 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(rating) FROM noteRating LEFT JOIN note ON (note.id = noteRating.noteId) LEFT JOIN user ON (user.id = note.authorId) WHERE user.id = ? 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:01:16.042 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 51(Long)
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:01:16.166 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@67064bdc, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:01:16.203 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:01:16.218 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.04 20:02:08.531 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:02:08.559 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:02:08.616 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:02:08.640 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:02:08.644 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:02:08.645 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:02:08.645 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.04 20:02:08.646 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.04 20:02:08.710 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.04 20:02:08.819 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.04 20:02:08.822 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:02:08.825 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:02:08.827 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:02:08.850 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@302f7971, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@332729ad, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@75d2da2d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4278284b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@9573584, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3370f42, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6057aebb, org.springframework.test.context.event.EventPublishingTestExecutionListener@63eef88a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@53251a66, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6853425f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@352c1b98, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@21129f1f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5a9f4771]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.04 20:02:08.856 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.04 20:02:09.055 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.04 20:02:09.339 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 15764 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.04 20:02:09.340 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.04 20:02:09.341 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.04 20:02:10.541 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.482 seconds (JVM running for 3.149)
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:02:10.570 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:02:10.822 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:02:10.829 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@58434b19, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7d3fb0ef]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:02:11.157 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:02:11, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:02:11.182 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:02:11.234 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:02:11.235 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.04 20:02:11.247 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=52, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:02:11, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:02:11.249 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:02:11.249 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 52(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:02:11.250 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:02:11.251 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:02:11.252 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 52(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:02:11.253 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:02:11.254 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=51, name='books', creator=User{id=52, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:02:11, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=52, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:02:11, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:02:11, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.254 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.255 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 52(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.256 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:02:11.256 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:02:11.258 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 51(Long), body(String), 52(Long), 2021-05-04T20:02:11(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:02:11.260 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:02:11.261 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 85
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.261 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.262 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 52(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.263 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:02:11.263 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:02:11.264 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 85(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:02:11.265 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:02:11.266 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 85
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.266 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.266 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 52(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.267 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:02:11.268 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:02:11.268 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 85(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:02:11.269 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:02:11.269 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 85
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.269 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.270 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 52(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.271 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:02:11.271 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:02:11.271 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 85(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:02:11.272 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:02:11.273 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=51, name='books', creator=User{id=52, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:02:11, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=52, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:02:11, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:02:11, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.273 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.273 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 52(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.274 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:02:11.275 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:02:11.276 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 51(Long), body2(String), 52(Long), 2021-05-04T20:02:11(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:02:11.277 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:02:11.278 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 86
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.278 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.278 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 52(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.279 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:02:11.279 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:02:11.280 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 86(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:02:11.281 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:02:11.282 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 86
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.282 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.283 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 52(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.285 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:02:11.286 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:02:11.287 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 86(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:02:11.288 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:02:11.288 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 86
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.288 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.289 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 52(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:02:11.290 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:02:11.290 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:02:11.290 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 86(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:02:11.291 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:02:11.293 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(rating) FROM noteRating LEFT JOIN note ON (note.id = noteRating.noteId) LEFT JOIN user ON (user.id = note.authorId) WHERE user.id = ? 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:02:11.294 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 52(Long)
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:02:11.375 INFO  [main] n.d.d.i.AccountDaoImpl: Cause: org.springframework.dao.DataIntegrityViolationException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'rating' in field list is ambiguous
### The error may exist in notesServer/database/mappers/AccountMapper.java (best guess)
### The error may involve notesServer.database.mappers.AccountMapper.getUserRating-Inline
### The error occurred while setting parameters
### SQL: SELECT AVG(rating) FROM noteRating LEFT JOIN note ON (note.id = noteRating.noteId) LEFT JOIN user ON (user.id = note.authorId) WHERE user.id = ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'rating' in field list is ambiguous
; Column 'rating' in field list is ambiguous; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'rating' in field list is ambiguous
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy74.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
	at com.sun.proxy.$Proxy83.getUserRating(Unknown Source)
	at notesServer.database.dao.impl.AccountDaoImpl.getUserRating(AccountDaoImpl.java:267)
	at notesServer.dao.TestNoteDao.getUserRating(TestNoteDao.java:227)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:675)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:125)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:132)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:124)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:74)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:104)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:62)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:43)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:35)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:202)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:198)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'rating' in field list is ambiguous
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3933)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3869)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2524)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2675)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2465)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1912)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1251)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy103.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 70 more

org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:02:11.393 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@58434b19, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:02:11.417 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:02:11.429 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.04 20:04:12.038 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:04:12.056 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:04:12.104 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:04:12.128 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:04:12.135 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:04:12.136 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:04:12.136 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.04 20:04:12.137 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.04 20:04:12.204 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.04 20:04:12.314 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.04 20:04:12.316 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:04:12.320 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:04:12.321 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:04:12.342 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@302f7971, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@332729ad, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@75d2da2d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4278284b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@9573584, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3370f42, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6057aebb, org.springframework.test.context.event.EventPublishingTestExecutionListener@63eef88a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@53251a66, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6853425f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@352c1b98, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@21129f1f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5a9f4771]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.04 20:04:12.348 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.04 20:04:12.521 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.04 20:04:12.816 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 9972 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.04 20:04:12.817 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.04 20:04:12.818 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.04 20:04:13.993 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.461 seconds (JVM running for 2.987)
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:04:14.026 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:04:14.263 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:04:14.269 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@753aca85, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@2e645fbd]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:04:14.600 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:04:14, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:04:14.627 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:04:14.682 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:04:14.684 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.04 20:04:14.698 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=53, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:04:14, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:04:14.699 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:04:14.700 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 53(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:04:14.702 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:04:14.703 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:04:14.704 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 53(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:04:14.705 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:04:14.706 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=52, name='books', creator=User{id=53, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:04:14, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=53, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:04:14, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:04:14, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.706 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.707 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 53(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.708 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:04:14.709 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:04:14.711 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 52(Long), body(String), 53(Long), 2021-05-04T20:04:14(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:04:14.712 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:04:14.713 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 87
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.713 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.714 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 53(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.715 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:04:14.715 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:04:14.716 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 87(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:04:14.717 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:04:14.717 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 87
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.717 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.718 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 53(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.719 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:04:14.719 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:04:14.720 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 87(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:04:14.721 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:04:14.721 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 87
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.721 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.722 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 53(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.723 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:04:14.723 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:04:14.724 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 87(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:04:14.725 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:04:14.725 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=52, name='books', creator=User{id=53, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:04:14, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=53, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:04:14, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:04:14, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.725 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.726 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 53(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.727 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:04:14.727 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:04:14.728 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 52(Long), body2(String), 53(Long), 2021-05-04T20:04:14(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:04:14.729 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:04:14.729 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 88
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.729 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.730 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 53(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.731 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:04:14.731 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:04:14.732 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 88(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:04:14.733 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:04:14.734 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 88
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.734 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.735 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 53(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.737 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:04:14.738 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:04:14.738 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 88(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:04:14.739 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:04:14.740 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 88
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.740 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.740 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 53(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:04:14.741 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:04:14.742 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:04:14.742 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 88(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:04:14.743 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:04:14.745 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(rating) AS rating FROM noteRating LEFT JOIN note ON (note.id = noteRating.noteId) LEFT JOIN user ON (user.id = note.authorId) WHERE user.id = ? GROUP bY rating 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:04:14.746 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 53(Long)
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:04:14.837 INFO  [main] n.d.d.i.AccountDaoImpl: Cause: org.springframework.dao.DataIntegrityViolationException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'rating' in field list is ambiguous
### The error may exist in notesServer/database/mappers/AccountMapper.java (best guess)
### The error may involve notesServer.database.mappers.AccountMapper.getUserRating-Inline
### The error occurred while setting parameters
### SQL: SELECT AVG(rating) AS rating FROM noteRating LEFT JOIN note ON (note.id = noteRating.noteId) LEFT JOIN user ON (user.id = note.authorId) WHERE user.id = ? GROUP bY rating
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'rating' in field list is ambiguous
; Column 'rating' in field list is ambiguous; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'rating' in field list is ambiguous
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy74.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
	at com.sun.proxy.$Proxy83.getUserRating(Unknown Source)
	at notesServer.database.dao.impl.AccountDaoImpl.getUserRating(AccountDaoImpl.java:267)
	at notesServer.dao.TestNoteDao.getUserRating(TestNoteDao.java:227)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:675)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:125)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:132)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:124)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:74)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:104)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:62)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:43)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:35)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:202)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:198)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'rating' in field list is ambiguous
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3933)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3869)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2524)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2675)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2465)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1912)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1251)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy103.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 70 more

org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:04:14.856 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@753aca85, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:04:14.878 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:04:14.887 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.04 20:05:15.984 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:05:16.002 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:05:16.051 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:05:16.075 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:05:16.080 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:05:16.081 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:05:16.081 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.04 20:05:16.082 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.04 20:05:16.145 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.04 20:05:16.242 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.04 20:05:16.243 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:05:16.245 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:05:16.246 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:05:16.267 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@302f7971, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@332729ad, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@75d2da2d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4278284b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@9573584, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3370f42, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6057aebb, org.springframework.test.context.event.EventPublishingTestExecutionListener@63eef88a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@53251a66, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6853425f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@352c1b98, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@21129f1f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5a9f4771]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.04 20:05:16.271 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.04 20:05:16.438 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.04 20:05:16.738 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 9376 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.04 20:05:16.739 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.04 20:05:16.741 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.04 20:05:17.971 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.528 seconds (JVM running for 3.03)
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:05:17.998 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:05:18.235 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:05:18.241 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@58434b19, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7d3fb0ef]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:05:18.553 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:05:18, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:05:18.578 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:05:18.621 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:05:18.629 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.04 20:05:18.652 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=54, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:05:18, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:05:18.653 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:05:18.654 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 54(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:05:18.655 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:05:18.656 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:05:18.656 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 54(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:05:18.657 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:18.658 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=53, name='books', creator=User{id=54, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:05:18, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=54, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:05:18, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:05:18, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.658 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.659 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 54(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.660 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:05:18.660 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:05:18.662 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 53(Long), body(String), 54(Long), 2021-05-04T20:05:18(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:05:18.663 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:18.664 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 89
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.664 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.664 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 54(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.665 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:18.666 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:18.666 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 89(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:18.667 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:18.668 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 89
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.668 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.668 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 54(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.669 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:18.670 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:18.670 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 89(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:18.671 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:18.671 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 89
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.672 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.672 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 54(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.673 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:18.673 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:18.673 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 89(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:18.674 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:18.675 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=53, name='books', creator=User{id=54, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:05:18, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=54, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:05:18, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:05:18, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.675 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.675 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 54(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.676 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:05:18.676 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:05:18.677 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 53(Long), body2(String), 54(Long), 2021-05-04T20:05:18(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:05:18.678 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:18.679 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 90
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.679 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.680 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 54(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.681 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:18.681 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:18.682 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 90(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:18.684 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:18.684 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 90
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.685 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.686 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 54(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.688 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:18.689 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:18.690 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 90(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:18.691 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:18.691 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 90
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.692 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.692 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 54(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:18.693 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:18.694 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:18.694 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 90(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:18.696 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:05:18.699 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(noteRating.rating) AS rating FROM noteRating LEFT JOIN note ON (note.id = noteRating.noteId) LEFT JOIN user ON (user.id = note.authorId) WHERE user.id = ? GROUP bY rating 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:05:18.700 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 54(Long)
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:05:18.791 INFO  [main] n.d.d.i.AccountDaoImpl: Cause: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Can't group on 'rating'
### The error may exist in notesServer/database/mappers/AccountMapper.java (best guess)
### The error may involve notesServer.database.mappers.AccountMapper.getUserRating-Inline
### The error occurred while setting parameters
### SQL: SELECT AVG(noteRating.rating) AS rating FROM noteRating LEFT JOIN note ON (note.id = noteRating.noteId) LEFT JOIN user ON (user.id = note.authorId) WHERE user.id = ? GROUP bY rating
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Can't group on 'rating'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Can't group on 'rating'
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:93)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy74.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
	at com.sun.proxy.$Proxy83.getUserRating(Unknown Source)
	at notesServer.database.dao.impl.AccountDaoImpl.getUserRating(AccountDaoImpl.java:267)
	at notesServer.dao.TestNoteDao.getUserRating(TestNoteDao.java:227)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:675)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:125)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:132)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:124)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:74)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:104)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:62)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:43)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:35)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:202)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:198)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Can't group on 'rating'
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3933)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3869)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2524)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2675)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2465)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1912)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1251)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at jdk.internal.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy103.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 70 more

org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:05:18.806 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@58434b19, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:05:18.825 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:05:18.834 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.04 20:05:38.091 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:05:38.109 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:05:38.152 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:05:38.177 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:05:38.183 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:05:38.184 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:05:38.185 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.04 20:05:38.186 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.04 20:05:38.262 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.04 20:05:38.353 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.04 20:05:38.355 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:05:38.357 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:05:38.358 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:05:38.378 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@302f7971, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@332729ad, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@75d2da2d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4278284b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@9573584, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3370f42, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6057aebb, org.springframework.test.context.event.EventPublishingTestExecutionListener@63eef88a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@53251a66, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6853425f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@352c1b98, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@21129f1f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5a9f4771]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.04 20:05:38.383 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.04 20:05:38.538 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.04 20:05:38.853 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 3840 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.04 20:05:38.853 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.04 20:05:38.854 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.04 20:05:40.092 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.549 seconds (JVM running for 2.967)
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:05:40.123 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:05:40.390 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:05:40.402 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@26350ea2, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@1e9469b8]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:05:40.753 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:05:40, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:05:40.779 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:05:40.834 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:05:40.835 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.04 20:05:40.842 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=55, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:05:40, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:05:40.844 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:05:40.844 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 55(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:05:40.845 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:05:40.846 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:05:40.846 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 55(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:05:40.847 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:40.848 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=54, name='books', creator=User{id=55, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:05:40, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=55, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:05:40, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:05:40, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.849 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.849 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 55(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.850 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:05:40.851 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:05:40.853 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 54(Long), body(String), 55(Long), 2021-05-04T20:05:40(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:05:40.854 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:40.855 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 91
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.855 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.856 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 55(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.857 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:40.858 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:40.859 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 91(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:40.860 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:40.860 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 91
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.861 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.861 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 55(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.862 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:40.863 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:40.863 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 91(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:40.864 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:40.865 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 91
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.865 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.865 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 55(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.866 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:40.867 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:40.867 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 91(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:40.868 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:40.869 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=54, name='books', creator=User{id=55, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:05:40, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=55, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:05:40, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:05:40, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.869 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.869 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 55(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.870 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:05:40.871 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:05:40.871 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 54(Long), body2(String), 55(Long), 2021-05-04T20:05:40(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:05:40.872 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:40.873 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 92
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.873 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.874 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 55(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.875 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:40.876 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:40.876 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 92(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:40.877 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:40.878 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 92
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.878 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.879 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 55(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.881 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:40.883 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:40.884 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 92(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:40.885 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:40.885 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 92
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.885 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.885 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 55(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:40.886 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:40.887 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:40.887 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 92(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:40.888 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:05:40.891 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(noteRating.rating) AS rating FROM noteRating LEFT JOIN note ON (note.id = noteRating.noteId) LEFT JOIN user ON (user.id = note.authorId) WHERE user.id = ? GROUP bY user.id 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:05:40.892 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 55(Long)
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:05:40.910 DEBUG [main] n.d.m.A.getUserRating: <==      Total: 1
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:05:40.930 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@26350ea2, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:05:40.945 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:05:40.955 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.04 20:05:54.300 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:05:54.325 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:05:54.380 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:05:54.407 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:05:54.415 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:05:54.417 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:05:54.417 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.04 20:05:54.418 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.04 20:05:54.528 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.04 20:05:54.677 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.04 20:05:54.679 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:05:54.682 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:05:54.684 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:05:54.710 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.04 20:05:54.716 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.04 20:05:54.901 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.04 20:05:55.238 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 2964 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.04 20:05:55.239 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.04 20:05:55.242 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.04 20:05:56.911 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 2.004 seconds (JVM running for 3.961)
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:05:56.947 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:05:57.253 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:05:57.260 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@77865933, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@480ad82c]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:05:57.634 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:05:57, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:05:57.673 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:05:57.718 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:05:57.719 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.04 20:05:57.728 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=56, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:05:57, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:05:57.731 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:05:57.731 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 56(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:05:57.732 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:05:57.733 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:05:57.734 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 56(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:05:57.735 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:57.736 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=55, name='books', creator=User{id=56, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:05:57, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=56, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:05:57, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:05:57, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.737 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.738 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 56(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.739 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:05:57.739 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:05:57.742 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 55(Long), body(String), 56(Long), 2021-05-04T20:05:57(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:05:57.744 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:57.745 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 93
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.745 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.746 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 56(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.747 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:57.748 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:57.748 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 93(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:57.749 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:57.750 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 93
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.750 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.751 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 56(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.752 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:57.752 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:57.753 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 93(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:57.754 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:57.754 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 93
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.755 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.755 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 56(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.756 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:57.756 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:57.757 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 93(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:57.758 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:57.758 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=55, name='books', creator=User{id=56, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:05:57, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=56, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:05:57, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:05:57, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.759 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.759 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 56(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.760 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:05:57.761 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:05:57.762 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 55(Long), body2(String), 56(Long), 2021-05-04T20:05:57(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:05:57.763 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:57.764 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 94
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.764 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.765 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 56(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.766 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:57.766 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:57.767 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 94(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:57.768 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:57.769 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 94
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.769 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.770 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 56(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.772 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:57.773 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:57.774 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 94(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:57.775 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:05:57.775 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 94
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.775 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.776 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 56(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:05:57.777 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:57.777 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:57.778 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 94(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:05:57.779 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:05:57.782 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(noteRating.rating) AS rating FROM noteRating LEFT JOIN note ON (note.id = noteRating.noteId) LEFT JOIN user ON (user.id = note.authorId) WHERE user.id = ? GROUP bY user.id 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:05:57.782 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 56(Long)
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:05:57.803 DEBUG [main] n.d.m.A.getUserRating: <==      Total: 1
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:06:13.075 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@77865933, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:06:13.087 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:06:13.094 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.04 20:07:07.045 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:07:07.066 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:07:07.117 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:07:07.147 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:07:07.153 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:07:07.154 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:07:07.155 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.04 20:07:07.156 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.04 20:07:07.225 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.04 20:07:07.340 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.04 20:07:07.342 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:07:07.345 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:07:07.346 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:07:07.379 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.04 20:07:07.386 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.04 20:07:07.556 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.04 20:07:07.894 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 6688 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.04 20:07:07.895 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.04 20:07:07.897 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.04 20:07:09.333 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.772 seconds (JVM running for 3.526)
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:07:09.375 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:07:09.663 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:07:09.669 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@424de326, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4bc33720]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:07:10.030 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:07:10, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:07:10.076 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:07:10.121 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:07:10.123 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.04 20:07:10.130 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=57, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:07:10, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:07:10.133 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:07:10.134 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 57(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:07:10.135 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:07:10.135 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:07:10.136 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 57(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:07:10.138 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:07:10.139 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=56, name='books', creator=User{id=57, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:07:10, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=57, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:07:10, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:07:10, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.139 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.140 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 57(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.141 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:07:10.142 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:07:10.145 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 56(Long), body(String), 57(Long), 2021-05-04T20:07:10(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:07:10.146 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:07:10.147 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 95
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.148 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.148 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 57(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.149 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:07:10.150 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:07:10.151 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 95(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:07:10.152 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:07:10.152 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 95
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.153 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.153 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 57(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.154 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:07:10.154 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:07:10.155 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 95(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:07:10.156 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:07:10.156 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 95
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.157 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.157 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 57(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.158 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:07:10.159 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:07:10.159 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 95(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:07:10.160 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:07:10.161 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=56, name='books', creator=User{id=57, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:07:10, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=57, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:07:10, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:07:10, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.161 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.162 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 57(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.163 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:07:10.163 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:07:10.164 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 56(Long), body2(String), 57(Long), 2021-05-04T20:07:10(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:07:10.165 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:07:10.166 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 96
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.166 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.167 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 57(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.168 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:07:10.168 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:07:10.169 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 96(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:07:10.170 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:07:10.170 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 96
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.171 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.172 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 57(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.174 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:07:10.175 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:07:10.176 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 96(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:07:10.177 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:07:10.177 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 96
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.177 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.177 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 57(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:07:10.178 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:07:10.179 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:07:10.179 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 96(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:07:10.180 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:07:10.183 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(noteRating.rating) AS rating FROM noteRating LEFT JOIN note ON (note.id = noteRating.noteId) LEFT JOIN user ON (user.id = note.authorId) WHERE user.id = ? GROUP bY user.id 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:07:10.184 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 57(Long)
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:07:10.202 DEBUG [main] n.d.m.A.getUserRating: <==      Total: 1
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:07:10.207 DEBUG [main] n.d.d.i.AccountDaoImpl: Select user by id = 57
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:07:10.208 DEBUG [main] n.d.m.A.getUserById: ==>  Preparing: SELECT * FROM user WHERE id = ? 
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:07:10.208 DEBUG [main] n.d.m.A.getUserById: ==> Parameters: 57(Long)
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:07:10.288 INFO  [main] n.d.d.i.AccountDaoImpl: Can't select user by id = 57! Cause: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: Could not set property 'rating' of 'class notesServer.model.User_$$_jvst741_0' with value '4' Cause: java.lang.IllegalArgumentException: argument type mismatch
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy74.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
	at com.sun.proxy.$Proxy83.getUserById(Unknown Source)
	at notesServer.database.dao.impl.AccountDaoImpl.getUserById(AccountDaoImpl.java:74)
	at notesServer.dao.TestNoteDao.getUserRating(TestNoteDao.java:229)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:675)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:125)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:132)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:124)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:74)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:104)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:62)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:43)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:35)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:202)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:198)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)
Caused by: org.apache.ibatis.reflection.ReflectionException: Could not set property 'rating' of 'class notesServer.model.User_$$_jvst741_0' with value '4' Cause: java.lang.IllegalArgumentException: argument type mismatch
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:185)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.set(BeanWrapper.java:59)
	at org.apache.ibatis.reflection.MetaObject.setValue(MetaObject.java:140)
	at org.apache.ibatis.executor.BaseExecutor$DeferredLoad.load(BaseExecutor.java:384)
	at org.apache.ibatis.executor.BaseExecutor.deferLoad(BaseExecutor.java:188)
	at org.apache.ibatis.executor.CachingExecutor.deferLoad(CachingExecutor.java:156)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getNestedQueryMappingValue(DefaultResultSetHandler.java:752)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getPropertyMappingValue(DefaultResultSetHandler.java:465)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyPropertyMappings(DefaultResultSetHandler.java:441)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:404)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:354)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:328)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:301)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:194)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 70 more
Caused by: java.lang.IllegalArgumentException: argument type mismatch
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.apache.ibatis.reflection.invoker.MethodInvoker.invoke(MethodInvoker.java:44)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.setBeanProperty(BeanWrapper.java:180)
	... 98 more

org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:07:10.313 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@424de326, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:07:10.348 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:07:10.362 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.04 20:10:32.755 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:10:32.773 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:10:32.822 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:10:32.847 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:10:32.852 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:10:32.853 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:10:32.853 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.04 20:10:32.854 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.04 20:10:32.917 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.04 20:10:33.019 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.04 20:10:33.021 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:10:33.025 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:10:33.026 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:10:33.060 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.04 20:10:33.067 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.04 20:10:33.246 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.04 20:10:33.591 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 12104 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.04 20:10:33.591 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.04 20:10:33.594 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.04 20:10:35.193 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.941 seconds (JVM running for 3.739)
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:10:35.243 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:10:35.525 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:10:35.532 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@5793b87, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@12704e15]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:10:35.933 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:10:35, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:10:35.969 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:10:36.012 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:10:36.014 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.04 20:10:36.023 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=58, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:10:35, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:10:36.025 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:10:36.025 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 58(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:10:36.026 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:10:36.027 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:10:36.028 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 58(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:10:36.029 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:10:36.030 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=57, name='books', creator=User{id=58, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:10:35, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=58, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:10:35, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:10:36, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.031 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.032 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 58(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.033 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:10:36.033 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:10:36.035 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 57(Long), body(String), 58(Long), 2021-05-04T20:10:36(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:10:36.036 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:10:36.037 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 97
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.038 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.039 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 58(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.040 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:10:36.040 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:10:36.041 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 97(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:10:36.042 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:10:36.042 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 97
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.043 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.043 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 58(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.044 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:10:36.045 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:10:36.045 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 97(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:10:36.046 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:10:36.047 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 97
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.047 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.048 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 58(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.049 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:10:36.049 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:10:36.049 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 97(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:10:36.051 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:10:36.051 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=57, name='books', creator=User{id=58, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:10:35, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=58, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:10:35, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:10:36, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.051 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.052 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 58(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.053 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:10:36.053 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:10:36.054 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 57(Long), body2(String), 58(Long), 2021-05-04T20:10:36(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:10:36.055 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:10:36.056 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 98
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.056 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.057 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 58(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.058 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:10:36.058 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:10:36.059 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 98(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:10:36.060 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:10:36.061 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 98
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.061 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.063 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 58(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.064 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:10:36.065 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:10:36.066 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 98(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:10:36.067 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:10:36.067 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 98
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.067 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.068 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 58(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:10:36.069 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:10:36.069 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:10:36.069 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 98(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:10:36.070 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:10:36.073 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(noteRating.rating) AS rating FROM noteRating LEFT JOIN note ON (note.id = noteRating.noteId) LEFT JOIN user ON (user.id = note.authorId) WHERE user.id = ? GROUP bY user.id 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:10:36.074 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 58(Long)
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:10:36.090 DEBUG [main] n.d.m.A.getUserRating: <==      Total: 1
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:10:36.094 DEBUG [main] n.d.d.i.AccountDaoImpl: Select user by id = 58
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:10:36.094 DEBUG [main] n.d.m.A.getUserById: ==>  Preparing: SELECT * FROM user WHERE id = ? 
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:10:36.095 DEBUG [main] n.d.m.A.getUserById: ==> Parameters: 58(Long)
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:10:36.162 DEBUG [main] n.d.m.A.getUserById: <==      Total: 1
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:10:51.597 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@5793b87, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:10:51.612 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:10:51.619 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.04 20:11:22.503 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:11:22.526 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:11:22.568 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:11:22.588 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:11:22.593 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:11:22.594 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:11:22.595 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.04 20:11:22.596 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.04 20:11:22.666 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.04 20:11:22.764 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.04 20:11:22.766 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:11:22.769 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:11:22.770 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:11:22.798 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@38ba6ce3, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@d278d2b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2d6c53fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@25f4878b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4e423aa2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7fbdb894, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3081f72c, org.springframework.test.context.event.EventPublishingTestExecutionListener@3148f668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6e005dc9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@59e32960]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.04 20:11:22.803 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.04 20:11:22.966 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.04 20:11:23.343 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 1856 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.04 20:11:23.345 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.04 20:11:23.347 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.04 20:11:24.765 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.794 seconds (JVM running for 3.523)
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:11:24.811 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:11:25.070 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:11:25.076 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@5793b87, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@12704e15]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:11:25.490 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:11:25, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:11:25.550 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:11:25.594 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:11:25.595 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.04 20:11:25.602 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=59, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:11:25, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:11:25.604 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:11:25.605 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 59(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:11:25.606 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:11:25.607 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:11:25.607 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 59(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:11:25.608 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:11:25.609 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=58, name='books', creator=User{id=59, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:11:25, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=59, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:11:25, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:11:25, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.610 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.611 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 59(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.612 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:11:25.612 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:11:25.615 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 58(Long), body(String), 59(Long), 2021-05-04T20:11:25(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:11:25.617 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:11:25.618 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 99
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.618 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.619 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 59(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.620 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:11:25.620 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:11:25.621 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 99(Long), 1(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:11:25.622 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:11:25.622 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 99
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.623 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.623 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 59(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.624 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:11:25.624 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:11:25.625 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 99(Long), 2(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:11:25.626 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:11:25.626 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 99
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.627 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.627 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 59(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.628 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:11:25.629 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:11:25.629 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 99(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:11:25.630 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:11:25.631 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=58, name='books', creator=User{id=59, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:11:25, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=59, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:11:25, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:11:25, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.631 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.631 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 59(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.632 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:11:25.633 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:11:25.634 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 58(Long), body2(String), 59(Long), 2021-05-04T20:11:25(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:11:25.635 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:11:25.636 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 100
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.636 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.636 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 59(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.638 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:11:25.638 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:11:25.639 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 100(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:11:25.641 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:11:25.641 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 100
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.641 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.642 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 59(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.644 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:11:25.645 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:11:25.646 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 100(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:11:25.647 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:11:25.648 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 100
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.648 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.648 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 59(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:11:25.649 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:11:25.650 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:11:25.650 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 100(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:11:25.651 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:11:25.655 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(noteRating.rating) AS rating FROM noteRating LEFT JOIN note ON (note.id = noteRating.noteId) LEFT JOIN user ON (user.id = note.authorId) WHERE user.id = ? GROUP bY user.id 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:11:25.656 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 59(Long)
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:11:25.674 DEBUG [main] n.d.m.A.getUserRating: <==      Total: 1
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:11:25.679 DEBUG [main] n.d.d.i.AccountDaoImpl: Select user by id = 59
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:11:25.680 DEBUG [main] n.d.m.A.getUserById: ==>  Preparing: SELECT * FROM user WHERE id = ? 
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:11:25.680 DEBUG [main] n.d.m.A.getUserById: ==> Parameters: 59(Long)
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:11:25.758 DEBUG [main] n.d.m.A.getUserById: <==      Total: 1
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:11:35.476 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@82ea68c testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@5793b87, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@59e505b2 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3af0a9da key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e2aa843, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1224144a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@2235eaab, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5f9edf14], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:11:35.490 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:11:35.499 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.04 20:12:00.412 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:12:00.431 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:12:00.480 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:12:00.507 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:12:00.514 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:12:00.515 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:12:00.515 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.04 20:12:00.516 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.04 20:12:00.578 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.04 20:12:00.689 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.04 20:12:00.691 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:12:00.693 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:12:00.694 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:12:00.713 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@302f7971, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@332729ad, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@75d2da2d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4278284b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@9573584, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3370f42, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6057aebb, org.springframework.test.context.event.EventPublishingTestExecutionListener@63eef88a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@53251a66, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6853425f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@352c1b98, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@21129f1f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5a9f4771]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.04 20:12:00.719 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.04 20:12:00.881 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.04 20:12:01.196 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 9744 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.04 20:12:01.196 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.04 20:12:01.198 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.04 20:12:02.424 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.532 seconds (JVM running for 3.05)
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:12:02.456 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:12:02.700 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:12:02.706 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@58434b19, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7d3fb0ef]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:12:03.032 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:12:03, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:12:03.055 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:12:03.121 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:12:03.122 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.04 20:12:03.130 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=60, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:12:03, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:12:03.132 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:12:03.132 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 60(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:12:03.133 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:12:03.134 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:12:03.135 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 60(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:12:03.136 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:12:03.137 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=59, name='books', creator=User{id=60, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:12:03, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=60, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:12:03, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:12:03, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.138 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.138 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 60(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.139 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:12:03.140 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:12:03.142 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 59(Long), body(String), 60(Long), 2021-05-04T20:12:03(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:12:03.144 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:12:03.144 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 101
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.145 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.145 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 60(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.146 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:12:03.147 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:12:03.147 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 101(Long), 1(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:12:03.148 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:12:03.149 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 101
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.149 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.149 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 60(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.150 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:12:03.151 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:12:03.151 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 101(Long), 2(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:12:03.153 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:12:03.153 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 101
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.153 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.154 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 60(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.155 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:12:03.155 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:12:03.155 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 101(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:12:03.157 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:12:03.157 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=59, name='books', creator=User{id=60, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:12:03, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=60, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:12:03, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:12:03, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.157 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.157 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 60(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.158 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:12:03.159 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:12:03.160 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 59(Long), body2(String), 60(Long), 2021-05-04T20:12:03(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:12:03.161 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:12:03.162 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 102
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.162 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.162 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 60(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.163 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:12:03.164 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:12:03.164 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 102(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:12:03.166 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:12:03.166 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 102
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.167 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.168 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 60(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.169 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:12:03.170 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:12:03.170 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 102(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:12:03.171 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:12:03.172 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 102
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.172 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.172 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 60(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:12:03.173 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:12:03.174 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:12:03.174 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 102(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:12:03.175 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:12:03.176 DEBUG [main] n.d.d.i.AccountDaoImpl: Select user by id = 60
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:12:03.178 DEBUG [main] n.d.m.A.getUserById: ==>  Preparing: SELECT * FROM user WHERE id = ? 
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:12:03.179 DEBUG [main] n.d.m.A.getUserById: ==> Parameters: 60(Long)
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:12:03.249 DEBUG [main] n.d.m.A.getUserById: <==      Total: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:12:03.253 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(noteRating.rating) AS rating FROM noteRating LEFT JOIN note ON (note.id = noteRating.noteId) LEFT JOIN user ON (user.id = note.authorId) WHERE user.id = ? GROUP bY user.id 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:12:03.254 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 60(Long)
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:12:03.256 DEBUG [main] n.d.m.A.getUserRating: <==      Total: 1
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:12:03.273 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@4196c360 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@58434b19, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@41294f8 testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@225129c key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2584b82d, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7d3e8655, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@37313c65, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13526e59], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:12:03.286 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:12:03.294 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.04 20:14:40.534 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:14:40.552 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:14:40.603 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:14:40.625 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:14:40.632 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:14:40.633 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:14:40.634 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.04 20:14:40.635 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.04 20:14:40.707 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.04 20:14:40.797 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.04 20:14:40.799 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:14:40.802 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:14:40.803 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:14:40.822 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@332729ad, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@75d2da2d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4278284b, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@9573584, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3370f42, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6057aebb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@63eef88a, org.springframework.test.context.event.EventPublishingTestExecutionListener@53251a66, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6853425f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@352c1b98, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@21129f1f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5a9f4771, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@282cb7c7]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.04 20:14:40.827 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@41294f8 testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@225129c testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@20435c40 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7bbc8656, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7dfb0c0f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@465232e9, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2235eaab], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.04 20:14:40.983 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.04 20:14:41.313 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 11584 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.04 20:14:41.314 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.04 20:14:41.316 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.04 20:14:42.524 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.537 seconds (JVM running for 2.951)
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:14:42.553 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:14:42.784 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:14:42.790 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@41294f8 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@58434b19, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@225129c testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@20435c40 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7bbc8656, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7dfb0c0f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@465232e9, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2235eaab], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7d3fb0ef]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:14:43.121 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:14:43, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:14:43.147 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:14:43.213 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:14:43.214 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:14:43.222 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:14:43, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:14:43.224 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:14:43.225 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:14:43.326 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@41294f8 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@58434b19, testMethod = getUserRating@TestNoteDao, testException = notesServer.erros.ServerException, mergedContextConfiguration = [MergedContextConfiguration@225129c testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@20435c40 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7bbc8656, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7dfb0c0f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@465232e9, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2235eaab], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:14:43.349 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:14:43.360 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.04 20:15:13.352 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:15:13.369 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:15:13.411 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:15:13.436 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:15:13.443 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:15:13.445 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:15:13.446 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.04 20:15:13.447 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.04 20:15:13.519 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.04 20:15:13.613 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.04 20:15:13.614 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:15:13.617 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:15:13.618 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:15:13.637 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@332729ad, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@75d2da2d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4278284b, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@9573584, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3370f42, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6057aebb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@63eef88a, org.springframework.test.context.event.EventPublishingTestExecutionListener@53251a66, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6853425f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@352c1b98, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@21129f1f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5a9f4771, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@282cb7c7]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.04 20:15:13.642 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@41294f8 testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@225129c testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@20435c40 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7bbc8656, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7dfb0c0f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@465232e9, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2235eaab], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.04 20:15:13.789 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.04 20:15:14.068 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 8652 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.04 20:15:14.069 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.04 20:15:14.071 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.04 20:15:15.289 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.496 seconds (JVM running for 2.89)
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:15:15.315 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:15:15.545 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:15:15.551 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@41294f8 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@623ebac7, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@225129c testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@20435c40 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7bbc8656, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7dfb0c0f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@465232e9, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2235eaab], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@7c8c70d6]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:15:15.886 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:15:15, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:15:15.915 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:15:15.972 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:15:15.973 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:15:15.983 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='qwertrertet', password='password1234', timeRegistered=2021-05-04T20:15:15, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:15:15.984 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:15:15.986 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), qwertrertet(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:15:15.993 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.04 20:15:15.994 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=63, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:15:15, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:15:15.996 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:15:15.996 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 63(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:15:15.998 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:15:15.998 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:15:16.000 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 63(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:15:16.001 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:15:16.002 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=60, name='books', creator=User{id=63, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:15:15, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=63, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:15:15, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:15:16, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.003 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.004 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 63(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.005 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:15:16.005 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:15:16.008 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 60(Long), body(String), 63(Long), 2021-05-04T20:15:16(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:15:16.009 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:15:16.010 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 103
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.010 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.010 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 63(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.011 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.012 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.012 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 103(Long), 1(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.013 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:15:16.014 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 103
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.014 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.014 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 63(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.015 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.016 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.016 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 103(Long), 2(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.017 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:15:16.018 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 103
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.018 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.019 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 63(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.020 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.020 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.021 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 103(Long), 3(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.022 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:15:16.022 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=60, name='books', creator=User{id=63, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:15:15, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=63, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:15:15, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:15:16, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.022 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.023 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 63(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.024 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:15:16.024 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:15:16.026 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 60(Long), body2(String), 63(Long), 2021-05-04T20:15:16(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:15:16.027 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:15:16.027 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 104
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.027 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.028 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 63(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.029 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.030 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.031 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 104(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.033 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:15:16.034 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 104
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.034 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.035 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 63(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.036 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.036 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.037 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 104(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.038 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:15:16.038 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 104
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.038 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.038 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 63(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.039 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.040 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.040 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 104(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.041 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:15:16.042 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subbub', body='body3', section=Section{id=60, name='books', creator=User{id=63, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:15:15, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=64, firstName='firstname', lastName='lastname', patronymic='patronymic', login='qwertrertet', password='password1234', timeRegistered=2021-05-04T20:15:15, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:15:16, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.042 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.043 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 64(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.044 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:15:16.044 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:15:16.046 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subbub(String), 60(Long), body3(String), 64(Long), 2021-05-04T20:15:16(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:15:16.047 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:15:16.048 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 104
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.048 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.048 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 63(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.049 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.050 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.050 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 104(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.051 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:15:16.052 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 104
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.052 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.052 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 63(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.053 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.054 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.054 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 104(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.055 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:15:16.056 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 104
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.056 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.057 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 63(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:15:16.058 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.058 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.059 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 104(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:15:16.060 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:15:16.060 DEBUG [main] n.d.d.i.AccountDaoImpl: Select user by id = 63
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:15:16.063 DEBUG [main] n.d.m.A.getUserById: ==>  Preparing: SELECT * FROM user WHERE id = ? 
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:15:16.064 DEBUG [main] n.d.m.A.getUserById: ==> Parameters: 63(Long)
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:15:16.158 DEBUG [main] n.d.m.A.getUserById: <==      Total: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:15:16.164 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(noteRating.rating) AS rating FROM noteRating LEFT JOIN note ON (note.id = noteRating.noteId) LEFT JOIN user ON (user.id = note.authorId) WHERE user.id = ? GROUP bY user.id 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:15:16.165 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 63(Long)
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:15:16.168 DEBUG [main] n.d.m.A.getUserRating: <==      Total: 1
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:15:16.191 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@41294f8 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@623ebac7, testMethod = getUserRating@TestNoteDao, testException = org.opentest4j.AssertionFailedError: expected: <3> but was: <4>, mergedContextConfiguration = [MergedContextConfiguration@225129c testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@20435c40 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7bbc8656, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7dfb0c0f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@465232e9, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2235eaab], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:15:16.210 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:15:16.222 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.04 20:16:24.517 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:16:24.533 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:16:24.580 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:16:24.605 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:16:24.612 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:16:24.613 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:16:24.614 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.04 20:16:24.615 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.04 20:16:24.683 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.04 20:16:24.769 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.04 20:16:24.771 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:16:24.773 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:16:24.774 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:16:24.799 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@332729ad, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@75d2da2d, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4278284b, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@9573584, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3370f42, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6057aebb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@63eef88a, org.springframework.test.context.event.EventPublishingTestExecutionListener@53251a66, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6853425f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@352c1b98, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@21129f1f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5a9f4771, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@282cb7c7]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.04 20:16:24.803 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@41294f8 testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@225129c testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@20435c40 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7bbc8656, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7dfb0c0f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@465232e9, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2235eaab], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.04 20:16:24.949 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.04 20:16:25.234 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 3248 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.04 20:16:25.235 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.04 20:16:25.236 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.04 20:16:26.427 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.473 seconds (JVM running for 2.854)
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:16:26.455 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:16:26.689 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:16:26.695 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@41294f8 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@1e1e9ef3, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@225129c testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@20435c40 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7bbc8656, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7dfb0c0f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@465232e9, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2235eaab], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@3dd31157]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:16:27.013 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:16:27, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:16:27.036 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:16:27.094 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:16:27.096 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:16:27.104 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='qwertrertet', password='password1234', timeRegistered=2021-05-04T20:16:27, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:16:27.105 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:16:27.106 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), qwertrertet(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:16:27.107 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.04 20:16:27.108 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=65, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:16:27, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:16:27.110 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:16:27.111 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 65(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:16:27.112 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:16:27.112 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:16:27.113 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 65(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:16:27.114 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:27.115 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=61, name='books', creator=User{id=65, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:16:27, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=65, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:16:27, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:16:27, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.115 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.116 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 65(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.117 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:16:27.117 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:16:27.120 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 61(Long), body(String), 65(Long), 2021-05-04T20:16:27(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:16:27.121 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:27.122 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 106
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.122 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.122 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 65(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.124 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.124 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.125 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 106(Long), 2(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.126 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:27.126 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 106
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.126 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.127 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 65(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.127 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.128 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.128 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 106(Long), 2(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.129 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:27.129 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 106
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.129 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.130 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 65(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.131 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.131 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.132 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 106(Long), 2(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.133 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:27.133 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=61, name='books', creator=User{id=65, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:16:27, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=65, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:16:27, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:16:27, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.133 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.133 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 65(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.134 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:16:27.135 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:16:27.136 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 61(Long), body2(String), 65(Long), 2021-05-04T20:16:27(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:16:27.137 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:27.137 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 107
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.137 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.138 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 65(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.139 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.140 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.141 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 107(Long), 4(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.142 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:27.143 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 107
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.144 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.144 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 65(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.145 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.145 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.146 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 107(Long), 4(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.146 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:27.147 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 107
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.147 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.147 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 65(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.148 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.148 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.148 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 107(Long), 4(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.149 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:27.149 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subbub', body='body3', section=Section{id=61, name='books', creator=User{id=65, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:16:27, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=66, firstName='firstname', lastName='lastname', patronymic='patronymic', login='qwertrertet', password='password1234', timeRegistered=2021-05-04T20:16:27, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:16:27, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.149 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.150 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 66(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.151 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:16:27.151 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:16:27.152 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subbub(String), 61(Long), body3(String), 66(Long), 2021-05-04T20:16:27(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:16:27.153 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:27.154 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 108
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.154 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.155 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 65(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.155 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.156 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.156 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 108(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.157 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:27.157 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 108
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.157 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.157 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 65(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.158 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.158 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.159 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 108(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.160 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:27.160 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 108
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.160 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.160 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 65(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:27.161 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.162 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.162 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 108(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:27.163 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:16:27.163 DEBUG [main] n.d.d.i.AccountDaoImpl: Select user by id = 65
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:16:27.165 DEBUG [main] n.d.m.A.getUserById: ==>  Preparing: SELECT * FROM user WHERE id = ? 
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:16:27.165 DEBUG [main] n.d.m.A.getUserById: ==> Parameters: 65(Long)
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:16:27.238 DEBUG [main] n.d.m.A.getUserById: <==      Total: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:16:27.242 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(noteRating.rating) AS rating FROM noteRating LEFT JOIN note ON (note.id = noteRating.noteId) LEFT JOIN user ON (user.id = note.authorId) WHERE user.id = ? GROUP bY user.id 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:16:27.243 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 65(Long)
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:16:27.245 DEBUG [main] n.d.m.A.getUserRating: <==      Total: 1
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:16:27.264 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@41294f8 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@1e1e9ef3, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@225129c testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@20435c40 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7bbc8656, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7dfb0c0f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@465232e9, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@8f424bb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2235eaab], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:16:27.280 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:16:27.290 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.04 20:16:33.316 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:16:33.333 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:16:33.376 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:16:33.397 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:16:33.402 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:16:33.403 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:16:33.403 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.04 20:16:33.404 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.04 20:16:33.470 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.04 20:16:33.562 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.04 20:16:33.564 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:16:33.567 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:16:33.568 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:16:33.595 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@d278d2b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2d6c53fc, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@25f4878b, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4e423aa2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7fbdb894, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3081f72c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3148f668, org.springframework.test.context.event.EventPublishingTestExecutionListener@6e005dc9, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@59e32960, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7c214cc0]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.04 20:16:33.600 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@59e505b2 testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3af0a9da testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@43b9fd5 key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6f36c2f0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@29f7cefd, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@17503f6b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@68746f22], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.04 20:16:33.749 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.04 20:16:34.101 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 11384 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.04 20:16:34.102 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.04 20:16:34.104 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.04 20:16:35.574 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.821 seconds (JVM running for 3.548)
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:16:35.618 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:16:35.895 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:16:35.902 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@59e505b2 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@424de326, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3af0a9da testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@43b9fd5 key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6f36c2f0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@29f7cefd, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@17503f6b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@68746f22], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@4bc33720]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:16:36.313 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:16:36, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:16:36.363 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:16:36.414 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:16:36.416 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:16:36.426 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='qwertrertet', password='password1234', timeRegistered=2021-05-04T20:16:36, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:16:36.427 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:16:36.428 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), qwertrertet(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:16:36.429 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.04 20:16:36.430 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=67, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:16:36, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:16:36.431 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:16:36.432 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 67(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:16:36.433 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:16:36.434 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:16:36.435 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 67(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:16:36.436 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:36.437 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=62, name='books', creator=User{id=67, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:16:36, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=67, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:16:36, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:16:36, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.437 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.438 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 67(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.439 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:16:36.440 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:16:36.442 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 62(Long), body(String), 67(Long), 2021-05-04T20:16:36(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:16:36.443 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:36.444 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 109
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.444 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.445 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 67(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.446 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.446 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.447 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 109(Long), 2(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.448 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:36.448 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 109
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.448 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.449 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 67(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.450 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.450 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.451 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 109(Long), 2(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.452 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:36.452 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 109
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.453 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.453 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 67(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.454 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.455 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.456 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 109(Long), 2(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.457 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:36.457 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=62, name='books', creator=User{id=67, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:16:36, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=67, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:16:36, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:16:36, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.458 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.458 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 67(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.459 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:16:36.460 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:16:36.461 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 62(Long), body2(String), 67(Long), 2021-05-04T20:16:36(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:16:36.462 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:36.463 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 110
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.464 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.464 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 67(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.465 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.466 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.468 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 110(Long), 4(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.470 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:36.471 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 110
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.471 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.472 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 67(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.473 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.473 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.474 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 110(Long), 4(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.475 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:36.475 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 110
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.476 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.476 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 67(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.477 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.478 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.479 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 110(Long), 4(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.480 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:36.480 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subbub', body='body3', section=Section{id=62, name='books', creator=User{id=67, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:16:36, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=68, firstName='firstname', lastName='lastname', patronymic='patronymic', login='qwertrertet', password='password1234', timeRegistered=2021-05-04T20:16:36, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:16:36, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.481 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.482 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 68(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.483 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:16:36.483 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:16:36.485 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subbub(String), 62(Long), body3(String), 68(Long), 2021-05-04T20:16:36(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:16:36.486 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:36.487 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 111
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.487 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.488 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 67(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.489 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.490 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.490 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 111(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.491 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:36.492 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 111
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.492 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.492 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 67(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.493 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.494 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.494 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 111(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.496 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:16:36.496 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 111
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.497 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.497 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 67(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:16:36.499 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.499 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.500 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 111(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:16:36.501 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:16:36.501 DEBUG [main] n.d.d.i.AccountDaoImpl: Select user by id = 67
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:16:36.504 DEBUG [main] n.d.m.A.getUserById: ==>  Preparing: SELECT * FROM user WHERE id = ? 
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:16:36.505 DEBUG [main] n.d.m.A.getUserById: ==> Parameters: 67(Long)
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:16:36.601 DEBUG [main] n.d.m.A.getUserById: <==      Total: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:16:36.919 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(noteRating.rating) AS rating FROM noteRating LEFT JOIN note ON (note.id = noteRating.noteId) LEFT JOIN user ON (user.id = note.authorId) WHERE user.id = ? GROUP bY user.id 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:16:36.919 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 67(Long)
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:16:36.921 DEBUG [main] n.d.m.A.getUserRating: <==      Total: 1
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:16:42.890 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@59e505b2 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@424de326, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3af0a9da testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@43b9fd5 key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6f36c2f0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@29f7cefd, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@17503f6b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@68746f22], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:16:42.904 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:16:42.911 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.04 20:17:05.197 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:17:05.219 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.04 20:17:05.271 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.dao.TestNoteDao] from class [org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:17:05.294 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.dao.TestNoteDao], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:17:05.300 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDao-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:17:05.301 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.dao.TestNoteDao]: class path resource [notesServer/dao/TestNoteDaoContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.04 20:17:05.301 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.dao.TestNoteDao]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.04 20:17:05.302 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.dao.TestNoteDao]: TestNoteDao does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.04 20:17:05.370 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.dao.TestNoteDao]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.04 20:17:05.467 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.04 20:17:05.470 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.dao.TestNoteDao
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:17:05.473 DEBUG [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.dao.TestNoteDao]: using defaults.
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:17:05.474 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper 2021.05.04 20:17:05.511 INFO  [main] o.m.s.b.t.a.MybatisTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@d278d2b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2d6c53fc, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@25f4878b, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4e423aa2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7fbdb894, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3081f72c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3148f668, org.springframework.test.context.event.EventPublishingTestExecutionListener@6e005dc9, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7ceb3185, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@436c81a3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3561c410, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@59e32960, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7c214cc0]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.04 20:17:05.518 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@59e505b2 testClass = TestNoteDao, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3af0a9da testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@43b9fd5 key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6f36c2f0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@29f7cefd, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@17503f6b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@68746f22], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.04 20:17:05.687 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true, server.port=-1}
notesServer.dao.TestNoteDao 2021.05.04 20:17:06.017 INFO  [main] n.d.TestNoteDao: Starting TestNoteDao on DESKTOP-KF64MBR with PID 8000 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.dao.TestNoteDao 2021.05.04 20:17:06.018 DEBUG [main] n.d.TestNoteDao: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.dao.TestNoteDao 2021.05.04 20:17:06.020 INFO  [main] n.d.TestNoteDao: No active profile set, falling back to default profiles: default
notesServer.dao.TestNoteDao 2021.05.04 20:17:07.454 INFO  [main] n.d.TestNoteDao: Started TestNoteDao in 1.761 seconds (JVM running for 3.497)
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:17:07.495 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:17:07.772 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:17:07.779 INFO  [main] o.s.t.c.t.TransactionContext: Began transaction (1) for test context [DefaultTestContext@59e505b2 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@7a360554, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3af0a9da testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@43b9fd5 key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6f36c2f0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@29f7cefd, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@17503f6b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@68746f22], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.jdbc.datasource.DataSourceTransactionManager@424de326]; rollback [true]
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:17:08.167 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:17:08, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:17:08.206 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:17:08.251 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), login(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:17:08.253 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:17:08.261 DEBUG [main] n.d.d.i.AccountDaoImpl: Insert new user User{id=0, firstName='firstname', lastName='lastname', patronymic='patronymic', login='qwertrertet', password='password1234', timeRegistered=2021-05-04T20:17:08, online=true, deleted=false, isSuper=false, rating=0}
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:17:08.262 DEBUG [main] n.d.m.A.insertUser: ==>  Preparing: INSERT INTO user(firstName, lastName, patronymic, login, password, online) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:17:08.263 DEBUG [main] n.d.m.A.insertUser: ==> Parameters: firstname(String), lastname(String), patronymic(String), qwertrertet(String), password1234(String), true(Boolean)
notesServer.database.mappers.AccountMapper.insertUser 2021.05.04 20:17:08.264 DEBUG [main] n.d.m.A.insertUser: <==    Updates: 1
notesServer.database.dao.impl.SectionDaoImpl 2021.05.04 20:17:08.265 DEBUG [main] n.d.d.i.SectionDaoImpl: Insert new section Section{id=0, name='books', creator=User{id=69, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:17:08, online=true, deleted=false, isSuper=false, rating=0}}
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:17:08.267 DEBUG [main] n.d.m.S.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:17:08.268 DEBUG [main] n.d.m.S.updateSessionLifetime: ==> Parameters: 69(Long)
notesServer.database.mappers.SectionMapper.updateSessionLifetime 2021.05.04 20:17:08.269 DEBUG [main] n.d.m.S.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:17:08.270 DEBUG [main] n.d.m.S.insertSection: ==>  Preparing: INSERT INTO section(name, creatorId) VALUES (?, ?) 
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:17:08.270 DEBUG [main] n.d.m.S.insertSection: ==> Parameters: books(String), 69(Long)
notesServer.database.mappers.SectionMapper.insertSection 2021.05.04 20:17:08.271 DEBUG [main] n.d.m.S.insertSection: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:17:08.272 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subject', body='body', section=Section{id=63, name='books', creator=User{id=69, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:17:08, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=69, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:17:08, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:17:08, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.272 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.273 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 69(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.274 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:17:08.274 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:17:08.277 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subject(String), 63(Long), body(String), 69(Long), 2021-05-04T20:17:08(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:17:08.278 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:17:08.278 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 112
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.279 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.279 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 69(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.280 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.281 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.282 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 112(Long), 2(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.283 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:17:08.283 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 112
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.283 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.283 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 69(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.284 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.285 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.285 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 112(Long), 2(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.286 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:17:08.286 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 112
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.287 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.287 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 69(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.288 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.289 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.289 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 112(Long), 2(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.290 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:17:08.290 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='sub', body='body2', section=Section{id=63, name='books', creator=User{id=69, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:17:08, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=69, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:17:08, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:17:08, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.291 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.291 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 69(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.292 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:17:08.292 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:17:08.293 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: sub(String), 63(Long), body2(String), 69(Long), 2021-05-04T20:17:08(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:17:08.294 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:17:08.295 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 113
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.295 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.296 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 69(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.298 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.299 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.301 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 113(Long), 4(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.303 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:17:08.304 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 113
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.304 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.305 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 69(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.306 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.306 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.306 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 113(Long), 4(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.307 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:17:08.307 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 113
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.308 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.308 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 69(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.309 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.309 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.309 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 113(Long), 4(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.310 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:17:08.310 DEBUG [main] n.d.d.i.NoteDaoImpl: Insert new note Note{id=0, subject='subbub', body='body3', section=Section{id=63, name='books', creator=User{id=69, firstName='firstname', lastName='lastname', patronymic='patronymic', login='login', password='password1234', timeRegistered=2021-05-04T20:17:08, online=true, deleted=false, isSuper=false, rating=0}}, author=User{id=70, firstName='firstname', lastName='lastname', patronymic='patronymic', login='qwertrertet', password='password1234', timeRegistered=2021-05-04T20:17:08, online=true, deleted=false, isSuper=false, rating=0}, created=2021-05-04T20:17:08, revisionId=1, comments=null, rating=0}
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.311 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.311 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 70(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.312 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:17:08.313 DEBUG [main] n.d.m.N.insertNote: ==>  Preparing: INSERT INTO note(subject, sectionId, body, authorId, created, revisionId) VALUES (?, ?, ?, ?, ?, ?) 
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:17:08.314 DEBUG [main] n.d.m.N.insertNote: ==> Parameters: subbub(String), 63(Long), body3(String), 70(Long), 2021-05-04T20:17:08(LocalDateTime), 1(Integer)
notesServer.database.mappers.NoteMapper.insertNote 2021.05.04 20:17:08.316 DEBUG [main] n.d.m.N.insertNote: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:17:08.316 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 114
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.316 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.317 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 69(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.318 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.318 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.318 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 114(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.319 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:17:08.319 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 114
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.320 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.320 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 69(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.321 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.321 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.322 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 114(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.323 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.NoteDaoImpl 2021.05.04 20:17:08.323 DEBUG [main] n.d.d.i.NoteDaoImpl: Rating notes by id = 114
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.323 DEBUG [main] n.d.m.N.updateSessionLifetime: ==>  Preparing: UPDATE session SET date = now() WHERE userId = ? 
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.323 DEBUG [main] n.d.m.N.updateSessionLifetime: ==> Parameters: 69(Long)
notesServer.database.mappers.NoteMapper.updateSessionLifetime 2021.05.04 20:17:08.324 DEBUG [main] n.d.m.N.updateSessionLifetime: <==    Updates: 0
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.325 DEBUG [main] n.d.m.N.ratingNotes: ==>  Preparing: INSERT INTO noteRating(noteId, rating) VALUES(?, ?) 
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.325 DEBUG [main] n.d.m.N.ratingNotes: ==> Parameters: 114(Long), 5(Integer)
notesServer.database.mappers.NoteMapper.ratingNotes 2021.05.04 20:17:08.326 DEBUG [main] n.d.m.N.ratingNotes: <==    Updates: 1
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:17:08.327 DEBUG [main] n.d.d.i.AccountDaoImpl: Select user by id = 69
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:17:08.329 DEBUG [main] n.d.m.A.getUserById: ==>  Preparing: SELECT * FROM user WHERE id = ? 
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:17:08.330 DEBUG [main] n.d.m.A.getUserById: ==> Parameters: 69(Long)
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:17:08.419 DEBUG [main] n.d.m.A.getUserById: <==      Total: 1
notesServer.database.dao.impl.AccountDaoImpl 2021.05.04 20:17:08.424 DEBUG [main] n.d.d.i.AccountDaoImpl: Select user by id = 70
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:17:08.425 DEBUG [main] n.d.m.A.getUserById: ==>  Preparing: SELECT * FROM user WHERE id = ? 
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:17:08.425 DEBUG [main] n.d.m.A.getUserById: ==> Parameters: 70(Long)
notesServer.database.mappers.AccountMapper.getUserById 2021.05.04 20:17:08.428 DEBUG [main] n.d.m.A.getUserById: <==      Total: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:17:08.823 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(noteRating.rating) AS rating FROM noteRating LEFT JOIN note ON (note.id = noteRating.noteId) LEFT JOIN user ON (user.id = note.authorId) WHERE user.id = ? GROUP bY user.id 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:17:08.825 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 69(Long)
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:17:08.828 DEBUG [main] n.d.m.A.getUserRating: <==      Total: 1
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:17:08.829 DEBUG [main] n.d.m.A.getUserRating: ==>  Preparing: SELECT AVG(noteRating.rating) AS rating FROM noteRating LEFT JOIN note ON (note.id = noteRating.noteId) LEFT JOIN user ON (user.id = note.authorId) WHERE user.id = ? GROUP bY user.id 
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:17:08.830 DEBUG [main] n.d.m.A.getUserRating: ==> Parameters: 70(Long)
notesServer.database.mappers.AccountMapper.getUserRating 2021.05.04 20:17:08.833 DEBUG [main] n.d.m.A.getUserRating: <==      Total: 1
org.springframework.test.context.transaction.TransactionContext 2021.05.04 20:17:15.453 INFO  [main] o.s.t.c.t.TransactionContext: Rolled back transaction for test: [DefaultTestContext@59e505b2 testClass = TestNoteDao, testInstance = notesServer.dao.TestNoteDao@7a360554, testMethod = getUserRating@TestNoteDao, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3af0a9da testClass = TestNoteDao, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.mybatis.spring.boot.test.autoconfigure.MybatisTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@43b9fd5 key = [notesServer.database.dao.impl.AccountDaoImpl, notesServer.database.dao.impl.SectionDaoImpl, notesServer.database.dao.impl.NoteDaoImpl, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration, org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6f36c2f0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@29f7cefd, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@17503f6b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b432a33f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@68746f22], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:17:15.464 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.05.04 20:17:15.470 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.05.12 19:21:05.672 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.12 19:21:05.691 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.12 19:21:05.723 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.service.TestSectionService] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:21:05.741 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.service.TestSectionService], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.12 19:21:05.746 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionService-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.12 19:21:05.746 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionServiceContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.12 19:21:05.747 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.service.TestSectionService]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.12 19:21:05.748 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.service.TestSectionService]: TestSectionService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.12 19:21:05.807 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.service.TestSectionService]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.12 19:21:05.927 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:21:05.928 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.service.TestSectionService
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:21:06.047 DEBUG [main] o.s.b.t.c.SpringBootTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.service.TestSectionService]: using defaults.
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:21:06.047 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:21:06.067 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7241a47d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70f59913, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@77258e59, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5dcd8c7a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2250b9f2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7e3181aa, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@253d9f73, org.springframework.test.context.event.EventPublishingTestExecutionListener@142269f2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@331acdad, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@41d426b5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@8dbfffb, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@f316aeb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6aa3a905]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.12 19:21:06.071 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@517566b testClass = TestSectionService, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@64b73e7a testClass = TestSectionService, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@305ffe9e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7ae0a9ec, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d96a4304, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5f8e8a9d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@25df00a0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.12 19:21:06.108 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
notesServer.service.TestSectionService 2021.05.12 19:21:06.422 INFO  [main] n.s.TestSectionService: Starting TestSectionService on DESKTOP-KF64MBR with PID 12736 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.service.TestSectionService 2021.05.12 19:21:06.422 DEBUG [main] n.s.TestSectionService: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.service.TestSectionService 2021.05.12 19:21:06.423 INFO  [main] n.s.TestSectionService: No active profile set, falling back to default profiles: default
notesServer.service.TestSectionService 2021.05.12 19:21:09.440 INFO  [main] n.s.TestSectionService: Started TestSectionService in 3.315 seconds (JVM running for 4.848)
org.springframework.test.context.BootstrapUtils 2021.05.12 19:22:09.439 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.12 19:22:09.455 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.12 19:22:09.492 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.service.TestSectionService] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:22:09.509 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.service.TestSectionService], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.12 19:22:09.514 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionService-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.12 19:22:09.515 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionServiceContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.12 19:22:09.516 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.service.TestSectionService]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.12 19:22:09.517 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.service.TestSectionService]: TestSectionService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.12 19:22:09.595 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.service.TestSectionService]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.12 19:22:09.704 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:22:09.707 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.service.TestSectionService
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:22:09.833 DEBUG [main] o.s.b.t.c.SpringBootTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.service.TestSectionService]: using defaults.
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:22:09.833 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:22:09.859 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7241a47d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70f59913, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@77258e59, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5dcd8c7a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2250b9f2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7e3181aa, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@253d9f73, org.springframework.test.context.event.EventPublishingTestExecutionListener@142269f2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@331acdad, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@41d426b5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@8dbfffb, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@f316aeb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6aa3a905]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.12 19:22:09.865 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@517566b testClass = TestSectionService, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@64b73e7a testClass = TestSectionService, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@305ffe9e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7ae0a9ec, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d96a4304, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5f8e8a9d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@25df00a0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.12 19:22:09.899 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
notesServer.service.TestSectionService 2021.05.12 19:22:10.195 INFO  [main] n.s.TestSectionService: Starting TestSectionService on DESKTOP-KF64MBR with PID 14424 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.service.TestSectionService 2021.05.12 19:22:10.195 DEBUG [main] n.s.TestSectionService: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.service.TestSectionService 2021.05.12 19:22:10.196 INFO  [main] n.s.TestSectionService: No active profile set, falling back to default profiles: default
notesServer.service.TestSectionService 2021.05.12 19:22:12.834 INFO  [main] n.s.TestSectionService: Started TestSectionService in 2.92 seconds (JVM running for 4.281)
org.springframework.test.context.BootstrapUtils 2021.05.12 19:50:27.717 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.12 19:50:27.731 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.12 19:50:27.766 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.service.TestSectionService] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:50:27.783 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.service.TestSectionService], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.12 19:50:27.791 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionService-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.12 19:50:27.792 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionServiceContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.12 19:50:27.793 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.service.TestSectionService]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.12 19:50:27.794 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.service.TestSectionService]: TestSectionService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.12 19:50:27.876 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.service.TestSectionService]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.12 19:50:27.989 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:50:27.991 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.service.TestSectionService
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:50:28.129 DEBUG [main] o.s.b.t.c.SpringBootTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.service.TestSectionService]: using defaults.
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:50:28.130 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:50:28.151 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7241a47d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70f59913, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@77258e59, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5dcd8c7a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2250b9f2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7e3181aa, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@253d9f73, org.springframework.test.context.event.EventPublishingTestExecutionListener@142269f2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@331acdad, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@41d426b5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@8dbfffb, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@f316aeb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6aa3a905]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.12 19:50:28.156 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@517566b testClass = TestSectionService, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@64b73e7a testClass = TestSectionService, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@305ffe9e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7ae0a9ec, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d96a4304, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5f8e8a9d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@25df00a0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.12 19:50:28.196 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
notesServer.service.TestSectionService 2021.05.12 19:50:28.523 INFO  [main] n.s.TestSectionService: Starting TestSectionService on DESKTOP-KF64MBR with PID 18384 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.service.TestSectionService 2021.05.12 19:50:28.524 DEBUG [main] n.s.TestSectionService: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.service.TestSectionService 2021.05.12 19:50:28.525 INFO  [main] n.s.TestSectionService: No active profile set, falling back to default profiles: default
notesServer.service.TestSectionService 2021.05.12 19:50:31.298 INFO  [main] n.s.TestSectionService: Started TestSectionService in 3.086 seconds (JVM running for 4.504)
org.springframework.test.context.BootstrapUtils 2021.05.12 19:50:59.643 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.12 19:50:59.660 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.12 19:50:59.698 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.service.TestSectionService] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:50:59.726 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.service.TestSectionService], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.12 19:50:59.735 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionService-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.12 19:50:59.736 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionServiceContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.12 19:50:59.737 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.service.TestSectionService]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.12 19:50:59.738 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.service.TestSectionService]: TestSectionService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.12 19:50:59.801 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.service.TestSectionService]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.12 19:50:59.921 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:50:59.923 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.service.TestSectionService
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:51:00.048 DEBUG [main] o.s.b.t.c.SpringBootTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.service.TestSectionService]: using defaults.
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:51:00.049 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:51:00.067 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7241a47d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70f59913, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@77258e59, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5dcd8c7a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2250b9f2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7e3181aa, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@253d9f73, org.springframework.test.context.event.EventPublishingTestExecutionListener@142269f2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@331acdad, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@41d426b5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@8dbfffb, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@f316aeb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6aa3a905]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.12 19:51:00.073 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@517566b testClass = TestSectionService, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@64b73e7a testClass = TestSectionService, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@305ffe9e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7ae0a9ec, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d96a4304, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5f8e8a9d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@25df00a0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.12 19:51:00.108 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
notesServer.service.TestSectionService 2021.05.12 19:51:00.399 INFO  [main] n.s.TestSectionService: Starting TestSectionService on DESKTOP-KF64MBR with PID 16272 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.service.TestSectionService 2021.05.12 19:51:00.400 DEBUG [main] n.s.TestSectionService: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.service.TestSectionService 2021.05.12 19:51:00.400 INFO  [main] n.s.TestSectionService: No active profile set, falling back to default profiles: default
notesServer.service.TestSectionService 2021.05.12 19:51:03.161 INFO  [main] n.s.TestSectionService: Started TestSectionService in 3.039 seconds (JVM running for 4.443)
org.springframework.test.context.BootstrapUtils 2021.05.12 19:55:38.361 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.12 19:55:38.380 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.12 19:55:38.416 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.service.TestSectionService] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:55:38.435 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.service.TestSectionService], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.12 19:55:38.441 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionService-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.12 19:55:38.442 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionServiceContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.12 19:55:38.442 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.service.TestSectionService]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.12 19:55:38.444 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.service.TestSectionService]: TestSectionService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.12 19:55:38.505 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.service.TestSectionService]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.12 19:55:38.639 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:55:38.641 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.service.TestSectionService
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:55:38.752 DEBUG [main] o.s.b.t.c.SpringBootTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.service.TestSectionService]: using defaults.
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:55:38.753 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:55:38.775 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5d12a356, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@134d26af, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@66ac5762, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@797cf65c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@31bcf236, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4b3ed2f0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4fad9bb2, org.springframework.test.context.event.EventPublishingTestExecutionListener@517d4a0d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7862f56, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3a12c404, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1941a8ff, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@22d7b4f8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@149dd36b]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.12 19:55:38.780 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@8dbfffb testClass = TestSectionService, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@f316aeb testClass = TestSectionService, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4d1c005e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5ddeb7cb, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@995a5900, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4f32a3ad, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@431cd9b2], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.12 19:55:38.815 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
notesServer.service.TestSectionService 2021.05.12 19:55:39.148 INFO  [main] n.s.TestSectionService: Starting TestSectionService on DESKTOP-KF64MBR with PID 17484 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.service.TestSectionService 2021.05.12 19:55:39.149 DEBUG [main] n.s.TestSectionService: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.service.TestSectionService 2021.05.12 19:55:39.150 INFO  [main] n.s.TestSectionService: No active profile set, falling back to default profiles: default
notesServer.service.TestSectionService 2021.05.12 19:55:41.834 INFO  [main] n.s.TestSectionService: Started TestSectionService in 3.005 seconds (JVM running for 4.304)
org.springframework.test.context.BootstrapUtils 2021.05.12 19:56:20.286 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.05.12 19:56:20.306 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.05.12 19:56:20.343 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.service.TestSectionService] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:56:20.361 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.service.TestSectionService], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.05.12 19:56:20.368 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionService-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.12 19:56:20.369 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionServiceContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.05.12 19:56:20.370 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.service.TestSectionService]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.05.12 19:56:20.371 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.service.TestSectionService]: TestSectionService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.05.12 19:56:20.446 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.service.TestSectionService]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.05.12 19:56:20.569 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:56:20.571 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.service.TestSectionService
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:56:20.690 DEBUG [main] o.s.b.t.c.SpringBootTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.service.TestSectionService]: using defaults.
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:56:20.691 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.05.12 19:56:20.714 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7241a47d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70f59913, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@77258e59, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5dcd8c7a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2250b9f2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7e3181aa, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@253d9f73, org.springframework.test.context.event.EventPublishingTestExecutionListener@142269f2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@331acdad, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@41d426b5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@8dbfffb, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@f316aeb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6aa3a905]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.05.12 19:56:20.720 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@517566b testClass = TestSectionService, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@64b73e7a testClass = TestSectionService, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@305ffe9e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7ae0a9ec, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d96a4304, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5f8e8a9d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@25df00a0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.05.12 19:56:20.758 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
notesServer.service.TestSectionService 2021.05.12 19:56:21.051 INFO  [main] n.s.TestSectionService: Starting TestSectionService on DESKTOP-KF64MBR with PID 9564 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.service.TestSectionService 2021.05.12 19:56:21.052 DEBUG [main] n.s.TestSectionService: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.service.TestSectionService 2021.05.12 19:56:21.053 INFO  [main] n.s.TestSectionService: No active profile set, falling back to default profiles: default
notesServer.service.TestSectionService 2021.05.12 19:56:23.800 INFO  [main] n.s.TestSectionService: Started TestSectionService in 3.028 seconds (JVM running for 4.45)
org.springframework.test.context.BootstrapUtils 2021.06.05 16:35:06.315 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.06.05 16:35:06.335 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.06.05 16:35:06.376 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.service.TestSectionService] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:35:06.398 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.service.TestSectionService], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:35:06.404 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionService-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:35:06.405 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionServiceContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:35:06.406 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.service.TestSectionService]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.06.05 16:35:06.407 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.service.TestSectionService]: TestSectionService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.06.05 16:35:06.463 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.service.TestSectionService]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.06.05 16:35:06.552 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:35:06.553 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.service.TestSectionService
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:35:06.674 DEBUG [main] o.s.b.t.c.SpringBootTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.service.TestSectionService]: using defaults.
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:35:06.674 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:35:06.693 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7241a47d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70f59913, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@77258e59, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5dcd8c7a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2250b9f2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7e3181aa, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@253d9f73, org.springframework.test.context.event.EventPublishingTestExecutionListener@142269f2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@331acdad, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@41d426b5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@8dbfffb, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@f316aeb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6aa3a905]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.06.05 16:35:06.699 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@517566b testClass = TestSectionService, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@64b73e7a testClass = TestSectionService, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@305ffe9e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7ae0a9ec, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d96a4304, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5f8e8a9d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@25df00a0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.06.05 16:35:06.736 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
notesServer.service.TestSectionService 2021.06.05 16:35:07.035 INFO  [main] n.s.TestSectionService: Starting TestSectionService on DESKTOP-KF64MBR with PID 12928 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.service.TestSectionService 2021.06.05 16:35:07.035 DEBUG [main] n.s.TestSectionService: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.service.TestSectionService 2021.06.05 16:35:07.036 INFO  [main] n.s.TestSectionService: No active profile set, falling back to default profiles: default
notesServer.service.TestSectionService 2021.06.05 16:35:09.989 INFO  [main] n.s.TestSectionService: Started TestSectionService in 3.239 seconds (JVM running for 4.788)
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:35:10.055 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.pool.HikariPool 2021.06.05 16:35:10.329 ERROR [main] c.z.h.p.HikariPool: HikariPool-1 - Exception during pool initialization.
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:878)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:874)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1770)
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1217)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2189)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2220)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2015)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:768)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:385)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:323)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:353)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:473)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:263)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:376)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:560)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:347)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at notesServer.service.SectionService$$EnhancerBySpringCGLIB$$7ba5dcff.getAllSections(<generated>)
	at notesServer.service.TestSectionService.getAllSections(TestSectionService.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:675)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:125)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:132)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:124)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:74)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:104)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:62)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:43)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:35)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:202)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:198)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.authentication.CachingSha2PasswordPlugin.nextAuthenticationStep(CachingSha2PasswordPlugin.java:130)
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1768)
	... 94 common frames omitted
org.springframework.test.context.BootstrapUtils 2021.06.05 16:35:31.798 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.06.05 16:35:31.817 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.06.05 16:35:31.851 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.service.TestSectionService] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:35:31.877 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.service.TestSectionService], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:35:31.886 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionService-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:35:31.887 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionServiceContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:35:31.888 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.service.TestSectionService]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.06.05 16:35:31.889 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.service.TestSectionService]: TestSectionService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.06.05 16:35:31.956 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.service.TestSectionService]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.06.05 16:35:32.063 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:35:32.064 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.service.TestSectionService
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:35:32.173 DEBUG [main] o.s.b.t.c.SpringBootTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.service.TestSectionService]: using defaults.
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:35:32.174 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:35:32.195 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7241a47d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70f59913, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@77258e59, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5dcd8c7a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2250b9f2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7e3181aa, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@253d9f73, org.springframework.test.context.event.EventPublishingTestExecutionListener@142269f2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@331acdad, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@41d426b5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@8dbfffb, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@f316aeb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6aa3a905]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.06.05 16:35:32.201 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@517566b testClass = TestSectionService, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@64b73e7a testClass = TestSectionService, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@305ffe9e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7ae0a9ec, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d96a4304, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5f8e8a9d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@25df00a0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.06.05 16:35:32.243 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
notesServer.service.TestSectionService 2021.06.05 16:35:32.557 INFO  [main] n.s.TestSectionService: Starting TestSectionService on DESKTOP-KF64MBR with PID 6312 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.service.TestSectionService 2021.06.05 16:35:32.558 DEBUG [main] n.s.TestSectionService: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.service.TestSectionService 2021.06.05 16:35:32.559 INFO  [main] n.s.TestSectionService: No active profile set, falling back to default profiles: default
notesServer.service.TestSectionService 2021.06.05 16:35:35.275 INFO  [main] n.s.TestSectionService: Started TestSectionService in 3.02 seconds (JVM running for 4.406)
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:35:35.337 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:35:35.574 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:35:35.623 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:35:35.630 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.06.05 16:36:16.779 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.06.05 16:36:16.798 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.06.05 16:36:16.839 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.service.TestSectionService] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:36:16.861 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.service.TestSectionService], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:36:16.869 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionService-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:36:16.870 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionServiceContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:36:16.871 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.service.TestSectionService]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.06.05 16:36:16.872 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.service.TestSectionService]: TestSectionService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.06.05 16:36:16.934 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.service.TestSectionService]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.06.05 16:36:17.038 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:36:17.040 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.service.TestSectionService
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:36:17.158 DEBUG [main] o.s.b.t.c.SpringBootTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.service.TestSectionService]: using defaults.
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:36:17.159 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:36:17.176 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7241a47d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70f59913, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@77258e59, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5dcd8c7a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2250b9f2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7e3181aa, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@253d9f73, org.springframework.test.context.event.EventPublishingTestExecutionListener@142269f2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@331acdad, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@41d426b5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@8dbfffb, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@f316aeb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6aa3a905]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.06.05 16:36:17.182 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@517566b testClass = TestSectionService, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@64b73e7a testClass = TestSectionService, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@305ffe9e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7ae0a9ec, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d96a4304, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5f8e8a9d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@25df00a0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.06.05 16:36:17.213 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
notesServer.service.TestSectionService 2021.06.05 16:36:17.539 INFO  [main] n.s.TestSectionService: Starting TestSectionService on DESKTOP-KF64MBR with PID 14704 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.service.TestSectionService 2021.06.05 16:36:17.540 DEBUG [main] n.s.TestSectionService: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.service.TestSectionService 2021.06.05 16:36:17.540 INFO  [main] n.s.TestSectionService: No active profile set, falling back to default profiles: default
notesServer.service.TestSectionService 2021.06.05 16:36:20.061 INFO  [main] n.s.TestSectionService: Started TestSectionService in 2.835 seconds (JVM running for 4.206)
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:36:20.125 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:36:20.363 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:36:20.407 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:36:20.413 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.06.05 16:39:57.463 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.06.05 16:39:57.496 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.06.05 16:39:57.561 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.service.TestSectionService] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:39:57.588 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.service.TestSectionService], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:39:57.614 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionService-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:39:57.617 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionServiceContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:39:57.618 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.service.TestSectionService]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.06.05 16:39:57.620 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.service.TestSectionService]: TestSectionService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.06.05 16:39:57.700 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.service.TestSectionService]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.06.05 16:39:57.874 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:39:57.876 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.service.TestSectionService
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:39:58.058 DEBUG [main] o.s.b.t.c.SpringBootTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.service.TestSectionService]: using defaults.
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:39:58.059 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:39:58.084 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@61a88b8c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@22295ec4, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5adb0db3, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3f270e0a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1a760689, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7241a47d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@70f59913, org.springframework.test.context.event.EventPublishingTestExecutionListener@77258e59, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5dcd8c7a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2250b9f2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7e3181aa, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@253d9f73, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@142269f2]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.06.05 16:39:58.091 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@43f82e78 testClass = TestSectionService, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@e54303 testClass = TestSectionService, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@792b749c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@73eb439a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d20ba444, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@43f02ef2, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@30f842ca], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.06.05 16:39:58.135 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
notesServer.service.TestSectionService 2021.06.05 16:39:58.542 INFO  [main] n.s.TestSectionService: Starting TestSectionService on DESKTOP-KF64MBR with PID 10732 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.service.TestSectionService 2021.06.05 16:39:58.543 DEBUG [main] n.s.TestSectionService: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.service.TestSectionService 2021.06.05 16:39:58.543 INFO  [main] n.s.TestSectionService: No active profile set, falling back to default profiles: default
notesServer.service.TestSectionService 2021.06.05 16:40:01.324 INFO  [main] n.s.TestSectionService: Started TestSectionService in 3.171 seconds (JVM running for 5.591)
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:40:01.399 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:40:01.652 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:40:01.695 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:40:01.700 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.06.05 16:40:58.578 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.06.05 16:40:58.596 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.06.05 16:40:58.636 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.service.TestSectionService] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:40:58.653 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.service.TestSectionService], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:40:58.661 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionService-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:40:58.662 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionServiceContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:40:58.662 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.service.TestSectionService]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.06.05 16:40:58.663 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.service.TestSectionService]: TestSectionService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.06.05 16:40:58.724 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.service.TestSectionService]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.06.05 16:40:58.830 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:40:58.831 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.service.TestSectionService
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:40:58.939 DEBUG [main] o.s.b.t.c.SpringBootTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.service.TestSectionService]: using defaults.
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:40:58.940 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:40:58.959 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7241a47d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70f59913, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@77258e59, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5dcd8c7a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2250b9f2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7e3181aa, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@253d9f73, org.springframework.test.context.event.EventPublishingTestExecutionListener@142269f2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@331acdad, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@41d426b5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@8dbfffb, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@f316aeb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6aa3a905]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.06.05 16:40:58.963 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@517566b testClass = TestSectionService, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@64b73e7a testClass = TestSectionService, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@305ffe9e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7ae0a9ec, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@d96a4304, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5f8e8a9d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@25df00a0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.06.05 16:40:58.989 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
notesServer.service.TestSectionService 2021.06.05 16:40:59.286 INFO  [main] n.s.TestSectionService: Starting TestSectionService on DESKTOP-KF64MBR with PID 4568 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.service.TestSectionService 2021.06.05 16:40:59.287 DEBUG [main] n.s.TestSectionService: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.service.TestSectionService 2021.06.05 16:40:59.288 INFO  [main] n.s.TestSectionService: No active profile set, falling back to default profiles: default
notesServer.service.TestSectionService 2021.06.05 16:41:01.807 INFO  [main] n.s.TestSectionService: Started TestSectionService in 2.808 seconds (JVM running for 4.102)
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:41:01.871 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:41:02.141 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:41:02.182 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:41:02.188 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.06.05 16:41:15.175 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.06.05 16:41:15.190 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.06.05 16:41:15.222 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.service.TestSectionService] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:41:15.243 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.service.TestSectionService], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:41:15.248 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionService-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:41:15.249 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionServiceContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:41:15.250 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.service.TestSectionService]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.06.05 16:41:15.251 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.service.TestSectionService]: TestSectionService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.06.05 16:41:15.300 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.service.TestSectionService]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.06.05 16:41:15.390 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:41:15.391 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.service.TestSectionService
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:41:15.512 DEBUG [main] o.s.b.t.c.SpringBootTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.service.TestSectionService]: using defaults.
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:41:15.512 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:41:15.533 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@50468873, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@146587a2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5f0e9815, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@76884e4b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@126945f9, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2a898881, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@16c63f5, org.springframework.test.context.event.EventPublishingTestExecutionListener@35229f85, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6d3c5255, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@b1712f3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6986bbaf, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4879dfad, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4758820d]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.06.05 16:41:15.538 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@6127a7e testClass = TestSectionService, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6bbe2511 testClass = TestSectionService, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5b799640, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3de8f619, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5d0a68fc, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4d15107f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5c7bfdc1], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.06.05 16:41:15.566 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
notesServer.service.TestSectionService 2021.06.05 16:41:15.883 INFO  [main] n.s.TestSectionService: Starting TestSectionService on DESKTOP-KF64MBR with PID 11880 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.service.TestSectionService 2021.06.05 16:41:15.883 DEBUG [main] n.s.TestSectionService: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.service.TestSectionService 2021.06.05 16:41:15.884 INFO  [main] n.s.TestSectionService: No active profile set, falling back to default profiles: default
notesServer.service.TestSectionService 2021.06.05 16:41:18.872 INFO  [main] n.s.TestSectionService: Started TestSectionService in 3.293 seconds (JVM running for 5.473)
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:41:18.953 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:41:19.231 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:41:44.019 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:41:44.027 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.06.05 16:41:45.907 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.06.05 16:41:45.931 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.06.05 16:41:46.107 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.service.TestSectionService] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:41:46.295 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.service.TestSectionService], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:41:46.333 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionService-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:41:46.334 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionServiceContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:41:46.335 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.service.TestSectionService]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.06.05 16:41:46.337 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.service.TestSectionService]: TestSectionService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.06.05 16:41:46.460 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.service.TestSectionService]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.06.05 16:41:46.651 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:41:46.661 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.service.TestSectionService
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:41:46.890 DEBUG [main] o.s.b.t.c.SpringBootTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.service.TestSectionService]: using defaults.
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:41:46.892 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:41:46.919 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@50468873, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@146587a2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5f0e9815, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@76884e4b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@126945f9, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2a898881, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@16c63f5, org.springframework.test.context.event.EventPublishingTestExecutionListener@35229f85, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6d3c5255, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@b1712f3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6986bbaf, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4879dfad, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4758820d]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.06.05 16:41:46.925 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@6127a7e testClass = TestSectionService, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6bbe2511 testClass = TestSectionService, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5b799640, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3de8f619, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5d0a68fc, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4d15107f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5c7bfdc1], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.06.05 16:41:46.962 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
notesServer.service.TestSectionService 2021.06.05 16:41:47.321 INFO  [main] n.s.TestSectionService: Starting TestSectionService on DESKTOP-KF64MBR with PID 14420 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.service.TestSectionService 2021.06.05 16:41:47.322 DEBUG [main] n.s.TestSectionService: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.service.TestSectionService 2021.06.05 16:41:47.323 INFO  [main] n.s.TestSectionService: No active profile set, falling back to default profiles: default
org.springframework.test.context.BootstrapUtils 2021.06.05 16:42:31.641 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.06.05 16:42:31.660 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.06.05 16:42:31.701 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.service.TestSectionService] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:42:31.721 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.service.TestSectionService], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:42:31.726 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionService-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:42:31.727 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionServiceContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:42:31.728 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.service.TestSectionService]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.06.05 16:42:31.729 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.service.TestSectionService]: TestSectionService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.06.05 16:42:31.782 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.service.TestSectionService]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.06.05 16:42:31.874 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:42:31.876 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.service.TestSectionService
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:42:31.988 DEBUG [main] o.s.b.t.c.SpringBootTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.service.TestSectionService]: using defaults.
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:42:31.989 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:42:32.009 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@50468873, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@146587a2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5f0e9815, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@76884e4b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@126945f9, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2a898881, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@16c63f5, org.springframework.test.context.event.EventPublishingTestExecutionListener@35229f85, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6d3c5255, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@b1712f3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6986bbaf, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4879dfad, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4758820d]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.06.05 16:42:32.014 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@6127a7e testClass = TestSectionService, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6bbe2511 testClass = TestSectionService, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5b799640, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3de8f619, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5d0a68fc, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4d15107f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5c7bfdc1], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.06.05 16:42:32.042 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
notesServer.service.TestSectionService 2021.06.05 16:42:32.352 INFO  [main] n.s.TestSectionService: Starting TestSectionService on DESKTOP-KF64MBR with PID 7808 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.service.TestSectionService 2021.06.05 16:42:32.353 DEBUG [main] n.s.TestSectionService: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.service.TestSectionService 2021.06.05 16:42:32.353 INFO  [main] n.s.TestSectionService: No active profile set, falling back to default profiles: default
notesServer.service.TestSectionService 2021.06.05 16:42:35.371 INFO  [main] n.s.TestSectionService: Started TestSectionService in 3.316 seconds (JVM running for 4.896)
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:42:35.444 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Starting...
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:42:35.737 INFO  [main] c.z.h.HikariDataSource: HikariPool-1 - Start completed.
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:42:54.806 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown initiated...
com.zaxxer.hikari.HikariDataSource 2021.06.05 16:42:54.814 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource: HikariPool-1 - Shutdown completed.
org.springframework.test.context.BootstrapUtils 2021.06.05 16:42:56.828 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
org.springframework.test.context.BootstrapUtils 2021.06.05 16:42:56.866 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
org.springframework.test.context.BootstrapUtils 2021.06.05 16:42:56.945 DEBUG [main] o.s.t.c.BootstrapUtils: Instantiating TestContextBootstrapper for test class [notesServer.service.TestSectionService] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:42:56.978 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Neither @ContextConfiguration nor @ContextHierarchy found for test class [notesServer.service.TestSectionService], using SpringBootContextLoader
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:42:56.988 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionService-context.xml] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:42:56.989 DEBUG [main] o.s.t.c.s.AbstractContextLoader: Did not detect default resource location for test class [notesServer.service.TestSectionService]: class path resource [notesServer/service/TestSectionServiceContext.groovy] does not exist
org.springframework.test.context.support.AbstractContextLoader 2021.06.05 16:42:56.989 INFO  [main] o.s.t.c.s.AbstractContextLoader: Could not detect default resource locations for test class [notesServer.service.TestSectionService]: no resource found for suffixes {-context.xml, Context.groovy}.
org.springframework.test.context.support.AnnotationConfigContextLoaderUtils 2021.06.05 16:42:56.990 INFO  [main] o.s.t.c.s.AnnotationConfigContextLoaderUtils: Could not detect default configuration classes for test class [notesServer.service.TestSectionService]: TestSectionService does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
org.springframework.test.context.support.ActiveProfilesUtils 2021.06.05 16:42:57.060 DEBUG [main] o.s.t.c.s.ActiveProfilesUtils: Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [notesServer.service.TestSectionService]
org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider 2021.06.05 16:42:57.165 DEBUG [main] o.s.c.a.ClassPathScanningCandidateComponentProvider: Identified candidate component class: file [C:\Users\#1\Desktop\NotesServer\target\classes\notesServer\NotesServer.class]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:42:57.166 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Found @SpringBootConfiguration notesServer.NotesServer for test class notesServer.service.TestSectionService
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:42:57.305 DEBUG [main] o.s.b.t.c.SpringBootTestContextBootstrapper: @TestExecutionListeners is not present for class [notesServer.service.TestSectionService]: using defaults.
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:42:57.306 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
org.springframework.boot.test.context.SpringBootTestContextBootstrapper 2021.06.05 16:42:57.326 INFO  [main] o.s.b.t.c.SpringBootTestContextBootstrapper: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@50468873, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@146587a2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5f0e9815, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@76884e4b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@126945f9, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2a898881, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@16c63f5, org.springframework.test.context.event.EventPublishingTestExecutionListener@35229f85, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6d3c5255, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@b1712f3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6986bbaf, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4879dfad, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4758820d]
org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener 2021.06.05 16:42:57.331 DEBUG [main] o.s.t.c.s.AbstractDirtiesContextTestExecutionListener: Before test class: context [DefaultTestContext@6127a7e testClass = TestSectionService, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6bbe2511 testClass = TestSectionService, locations = '{}', classes = '{class notesServer.NotesServer}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5b799640, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3de8f619, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@5d0a68fc, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4d15107f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5c7bfdc1], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
org.springframework.test.context.support.TestPropertySourceUtils 2021.06.05 16:42:57.366 DEBUG [main] o.s.t.c.s.TestPropertySourceUtils: Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
notesServer.service.TestSectionService 2021.06.05 16:42:57.675 INFO  [main] n.s.TestSectionService: Starting TestSectionService on DESKTOP-KF64MBR with PID 8528 (started by #1 in C:\Users\#1\Desktop\NotesServer)
notesServer.service.TestSectionService 2021.06.05 16:42:57.676 DEBUG [main] n.s.TestSectionService: Running with Spring Boot v2.2.0.RELEASE, Spring v5.2.0.RELEASE
notesServer.service.TestSectionService 2021.06.05 16:42:57.676 INFO  [main] n.s.TestSectionService: No active profile set, falling back to default profiles: default
