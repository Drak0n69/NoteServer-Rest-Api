DROP DATABASE IF EXISTS notes;
CREATE DATABASE IF NOT EXISTS notes;
USE notes;

CREATE TABLE IF NOT EXISTS user (
	`id` BIGINT NOT NULL AUTO_INCREMENT,
    `firstName` VARCHAR(50) NOT NULL,
    `lastName` VARCHAR(50) NOT NULL,
    `patronymic` VARCHAR(50),
    `login` VARCHAR(50) NOT NULL,
    `password` VARCHAR(50) BINARY NOT NULL,
    `timeRegistered` DATETIME DEFAULT NOW(0),
    `online` TINYINT(1) NOT NULL DEFAULT '1',
    `deleted` TINYINT(1) NOT NULL DEFAULT '0',
    `super` TINYINT(1) NOT NULL DEFAULT '0',
    `rating` INT UNSIGNED NOT NULL DEFAULT '0',
    PRIMARY KEY (`id`),
    UNIQUE KEY (`login`)
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

CREATE TABLE IF NOT EXISTS section (
	`id` BIGINT NOT NULL AUTO_INCREMENT,
    `name` VARCHAR(50) NOT NULL,
    `creatorId` BIGINT NOT NULL,
    PRIMARY KEY (`id`),
    UNIQUE KEY (`name`),
    FOREIGN KEY (`creatorId`) REFERENCES notes.user (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

CREATE TABLE IF NOT EXISTS note (
	`id` BIGINT NOT NULL AUTO_INCREMENT,
    `subject` VARCHAR(50) NOT NULL,
    `sectionId` BIGINT NOT NULL,
    `body` VARCHAR(500) NOT NULL,
    `authorId` BIGINT NOT NULL,
    `created` DATETIME NOT NULL DEFAULT NOW(0),
    `revisionId` INT UNSIGNED NOT NULL DEFAULT '1',
    PRIMARY KEY (`id`),
    UNIQUE KEY (`subject`),
    FOREIGN KEY (`sectionId`) REFERENCES notes.section (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`authorId`) REFERENCES notes.user (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

CREATE TABLE IF NOT EXISTS noteHistory (
	`id` BIGINT NOT NULL AUTO_INCREMENT,
    `noteId` BIGINT NOT NULL,
    `revisionId` INT UNSIGNED NOT NULL DEFAULT '1',
	`body` TEXT NOT NULL,
    PRIMARY KEY (`id`),
    UNIQUE KEY (`noteId`, `revisionId`),
    FOREIGN KEY (`noteId`) REFERENCES notes.note (`id`) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

CREATE TABLE IF NOT EXISTS noteRating (
	`id` BIGINT NOT NULL AUTO_INCREMENT,
    `noteId` BIGINT NOT NULL,
    `rating` INT UNSIGNED NOT NULL DEFAULT '0',
    PRIMARY KEY (`id`),
    FOREIGN KEY (`noteId`) REFERENCES notes.note (`id`) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

CREATE TABLE IF NOT EXISTS comment (
	`id` BIGINT NOT NULL AUTO_INCREMENT,
    `body` TEXT NOT NULL,
    `noteId` BIGINT NOT NULL,
    `authorId` BIGINT NOT NULL,
    `revisionId` INT UNSIGNED NOT NULL DEFAULT '1',
    `created` DATETIME NOT NULL DEFAULT NOW(0),
    PRIMARY KEY (`id`),
    FOREIGN KEY (`noteId`) REFERENCES notes.note (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`authorId`) REFERENCES notes.user (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

CREATE TABLE IF NOT EXISTS follow (
	`id` BIGINT NOT NULL AUTO_INCREMENT,
    `userId` BIGINT NOT NULL,
    `userFollowId` BIGINT NOT NULL,
	PRIMARY KEY (`id`),
    FOREIGN KEY (`userId`) REFERENCES notes.user (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`userFollowId`) REFERENCES notes.user (`id`) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

CREATE TABLE IF NOT EXISTS ignor (
	`id` BIGINT NOT NULL AUTO_INCREMENT,
    `userId` BIGINT NOT NULL,
    `userIgnorId` BIGINT NOT NULL,
	PRIMARY KEY (`id`),
    FOREIGN KEY (`userId`) REFERENCES notes.user (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`userIgnorId`) REFERENCES notes.user (`id`) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

CREATE TABLE IF NOT EXISTS session (
	`id` BIGINT NOT NULL AUTO_INCREMENT,
    `userId` BIGINT NOT NULL,
    `cookie` VARCHAR(50) NOT NULL,
    `date` DATETIME NOT NULL DEFAULT NOW(0),
    PRIMARY KEY (`id`),
    UNIQUE KEY (`userId`),
	FOREIGN KEY (`userId`) REFERENCES notes.user (`id`) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

INSERT INTO user (`firstName`, `lastName`, `patronymic`, `login`, `password`, `super`) VALUES ("Иван", "Ивановuser", "Иванович", "admin", "qwerty", "1");